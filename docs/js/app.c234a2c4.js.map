{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?1836","webpack:///./src/components/HelloWorld.vue?382e","webpack:///./src/constants/populations.js","webpack:///src/components/HelloWorld.vue","webpack:///./src/components/HelloWorld.vue?4efa","webpack:///./src/components/HelloWorld.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/App.vue?c650","webpack:///./src/components/HelloWorld.vue?c054"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","staticClass","_v","directives","rawName","inputs","expression","domProps","on","$event","target","composing","$set","firstDayMode","_e","_q","tooltips","scalePopulation","$$selectedVal","Array","filter","options","selected","map","val","_value","multiple","_l","item","country","population","countries","populations","_s","toLocaleString","chartOptions","series","_m","China","India","USA","Indonesia","Pakistan","Brazil","Nigeria","Bangladesh","Russia","Mexico","Japan","Ethiopia","Philippines","Egypt","Vietnam","Turkey","Iran","Germany","Thailand","UK","France","Italy","Myanmar","Kenya","Colombia","Spain","Uganda","Argentina","Algeria","Sudan","Ukraine","Iraq","Afghanistan","Poland","Canada","Morocco","Uzbekistan","Peru","Angola","Malaysia","Mozambique","Ghana","Yemen","Nepal","Venezuela","Madagascar","Cameroon","Australia","Niger","Mali","Romania","Malawi","Chile","Kazakhstan","Zambia","Guatemala","Ecuador","Netherlands","Senegal","Cambodia","Chad","Somalia","Zimbabwe","Guinea","Rwanda","Benin","Burundi","Tunisia","Bolivia","Belgium","Haiti","Cuba","Czechia","Greece","Jordan","Portugal","Azerbaijan","Sweden","Honduras","UAE","Hungary","Tajikistan","Belarus","Austria","Serbia","Israel","Switzerland","Togo","Laos","Paraguay","Bulgaria","Libya","Lebanon","Nicaragua","Kyrgyzstan","Turkmenistan","Singapore","Denmark","Finland","Slovakia","Norway","Oman","Liberia","Ireland","Mauritania","Panama","Kuwait","Croatia","Georgia","Eritrea","Uruguay","Mongolia","Armenia","Jamaica","Qatar","Albania","Lithuania","Namibia","Gambia","Botswana","Gabon","Lesotho","Macedonia","Slovenia","GuineaBissau","Latvia","Bahrain","Estonia","TimorLeste","Mauritius","Cyprus","Eswatini","Djibouti","Fiji","Réunion","Comoros","Guyana","Bhutan","Macao","Montenegro","Luxembourg","Suriname","Maldives","Malta","Brunei","Guadeloupe","Belize","Bahamas","Martinique","Iceland","Vanuatu","Barbados","Mayotte","Samoa","Guam","Curaçao","Kiribati","Micronesia","Grenada","Aruba","Tonga","Seychelles","Andorra","Dominica","Bermuda","Greenland","Liechtenstein","Tuvalu","Bosnia","Monaco","Kosovo","Burma","deaths","deathsPerMillion","props","msg","String","watch","deep","handler","updateSeries","methods","dataIsExpired","localStorage","historicalExpired","dateTimeNow","dateTimeDataWasPulledLast","refreshDataEveryMiliseconds","cleanUpData","flags","merged","getDeathsByCountry","countryData","timeline","dateProp","getTopDeaths","updateLabels","firstDayModes","startText","scaleToCountryPopulation","title","text","clearTimeout","timersUpdate","setTimeout","rawData","forEach","scaleMultiplier","addData","Math","round","element","color","getDeathsPerMillion","initValues","lastDateName","getLastDate","initInputs","params","has","parseInt","firstDayDeathsOver","firstDayDeathsPerMillionOver","minDeaths","yesterday","setDate","today","getDate","computed","topDeaths","created","getHistoricalData","then","component","components","HelloWorld","Vue","use","VueApexCharts","config","productionTip","render","h","App","$mount"],"mappings":"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","file":"js/app.c234a2c4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('HelloWorld',{attrs:{\"msg\":\"Welcome to Your Vue.js App\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"hello\"},[_vm._v(\" Only show where current total deaths >= \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.minDeaths),expression:\"inputs.minDeaths\"}],staticClass:\"small-number\",attrs:{\"type\":\"number\",\"min\":\"20\"},domProps:{\"value\":(_vm.inputs.minDeaths)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, \"minDeaths\", $event.target.value)}}}),_vm._v(\" and start showing \\\"day 1\\\" after \"),(_vm.inputs.firstDayMode === 'deaths')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.firstDayDeathsOver),expression:\"inputs.firstDayDeathsOver\"}],staticClass:\"small-number\",attrs:{\"type\":\"number\",\"min\":\"1\"},domProps:{\"value\":(_vm.inputs.firstDayDeathsOver)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, \"firstDayDeathsOver\", $event.target.value)}}}):_vm._e(),(_vm.inputs.firstDayMode === 'deathsPerMillion')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.firstDayDeathsPerMillionOver),expression:\"inputs.firstDayDeathsPerMillionOver\"}],staticClass:\"small-number\",attrs:{\"type\":\"number\",\"min\":\"1\"},domProps:{\"value\":(_vm.inputs.firstDayDeathsPerMillionOver)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, \"firstDayDeathsPerMillionOver\", $event.target.value)}}}):_vm._e(),_vm._v(\" ( \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.firstDayMode),expression:\"inputs.firstDayMode\"}],attrs:{\"type\":\"radio\",\"value\":\"deaths\"},domProps:{\"checked\":_vm._q(_vm.inputs.firstDayMode,\"deaths\")},on:{\"change\":function($event){return _vm.$set(_vm.inputs, \"firstDayMode\", \"deaths\")}}}),_vm._v(\"deaths or \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.firstDayMode),expression:\"inputs.firstDayMode\"}],attrs:{\"type\":\"radio\",\"value\":\"deathsPerMillion\"},domProps:{\"checked\":_vm._q(_vm.inputs.firstDayMode,\"deathsPerMillion\")},on:{\"change\":function($event){return _vm.$set(_vm.inputs, \"firstDayMode\", \"deathsPerMillion\")}}}),_vm._v(\"deaths per million ) \"),_c('br'),_c('span',{attrs:{\"title\":_vm.tooltips.scalePopulation}},[_vm._v(\" Scale to Population: \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.scaleToCountryPopulation),expression:\"inputs.scaleToCountryPopulation\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.inputs, \"scaleToCountryPopulation\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"0\"}},[_vm._v(\"Do not scale by population\")]),_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"Scale by Deaths per Million (population)\")]),_vm._l((_vm.topDeaths),function(item){return _c('option',{key:item.country,domProps:{\"value\":{ population: _vm.countries.populations[item.country], name: item.country }}},[_vm._v(_vm._s(item.country)+\" (\"+_vm._s(_vm.countries.populations[item.country].toLocaleString())+\")\")])})],2)]),_c('div',{attrs:{\"id\":\"chart\"}},[_c('apexchart',{attrs:{\"type\":\"line\",\"height\":\"650\",\"options\":_vm.chartOptions,\"series\":_vm.series}})],1),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\" As a business owner, I am very interested in predicting when we can SAFELY get back to work. This was built to help predict where we are at in the pandemic (beginning, middle or end). \")]),_c('li',[_vm._v(\" I was not 100% happy with the typical charts I was seeing: \"),_c('a',{attrs:{\"href\":\"?mode=deaths&startAfter=100&scale=0&deaths=1000\"}},[_vm._v(\"HERE (no population scale, timelines starts after deaths >= 100)\")])]),_c('li',[_vm._v(\" So I built this one \"),_c('a',{attrs:{\"href\":\"?mode=deathsPerMillion&startAfter=3&scale=1&deaths=3000\"}},[_vm._v(\"HERE (scale to population (deaths per million), timelines starts after deaths per million >= 3)\")])]),_c('li',[_vm._v(\" This chart uses death data because I feel it is more accurate. Case data is too inconsistent across countries/states. Testing is all ove the place. So even though death data can be anywhere from 14-21 days LAGGING. If we start seeing the rate slow down in deaths, we can be sure we are on the downtrend of cases. However, even though this is way more accurate, there are many reports that even the deaths are under reported. Some are dying and not getting tested, some are dying and not even making it to the hospital. Reports in Italy say it could be under reported by even double in some villages. \")]),_c('li',[_vm._v(\"Many of the charts out there do not take into account population. So this one does that.\")]),_c('li',[_vm._v(\" Many of the charts out there start at graphing the data after the first 100 deaths. But again, this DOES NOT take into account population so gives a false timeline comparison IMO. USA's first 100 deaths is nothing compared to Luxembourg's first 100 deaths. So instead, this looks at when they hit 3 deaths per million. Puts everyone at the same scale IMO. \")]),_c('li',[_vm._v(\" I also wanted to be able to say \\\"If it were to spread here (in the USA), at the same rate in does in say Italy or Spain or Iran, ... What would the death toll potentially look like?\\\" also \\\"If we were the same as another country, are we 'just getting started' or are we 'past the peak', ...?\\\" \")]),_c('li',[_vm._v(\"TODO: get the height to fill the screen in a smart way\")]),_c('li',[_vm._v(\"TODO: Allow user to change between first X deaths per million or first X deaths (so they can see the difference)\")]),_c('li',[_vm._v(\"TODO: Allow user to change the \\\"X\\\" in the item above first 100 deaths, first 50 deaths or first 3/million or 5/million etc\")])])}]\n\nexport { render, staticRenderFns }","// manually pulled from\n// https://www.worldometers.info/world-population/population-by-country/\n// looking for a good API\nexport default {\n  populations: {\n    China: 1439323776,\n    India: 1380004385,\n    USA: 331002651,\n    Indonesia: 273523615,\n    Pakistan: 220892340,\n    Brazil: 212559417,\n    Nigeria: 206139589,\n    Bangladesh: 164689383,\n    Russia: 145934462,\n    Mexico: 128932753,\n    Japan: 126476461,\n    Ethiopia: 114963588,\n    Philippines: 109581078,\n    Egypt: 102334404,\n    Vietnam: 97338579,\n    'DR Congo': 89561403,\n    Turkey: 84339067,\n    Iran: 83992949,\n    Germany: 83783942,\n    Thailand: 69799978,\n    UK: 67886011,\n    France: 65273511,\n    Italy: 60461826,\n    'Tanzania, United Republic of': 59734218,\n    'South Africa': 59308690,\n    Myanmar: 54409800,\n    Kenya: 53771296,\n    'S. Korea': 51269185,\n    Colombia: 50882891,\n    Spain: 46754778,\n    Uganda: 45741007,\n    Argentina: 45195774,\n    Algeria: 43851044,\n    Sudan: 43849260,\n    Ukraine: 43733762,\n    Iraq: 40222493,\n    Afghanistan: 38928346,\n    Poland: 37846611,\n    Canada: 37742154,\n    Morocco: 36910560,\n    'Saudi Arabia': 34813871,\n    Uzbekistan: 33469203,\n    Peru: 32971854,\n    Angola: 32866272,\n    Malaysia: 32365999,\n    Mozambique: 31255435,\n    Ghana: 31072940,\n    Yemen: 29825964,\n    Nepal: 29136808,\n    Venezuela: 28435940,\n    Madagascar: 27691018,\n    Cameroon: 26545863,\n    \"Côte d'Ivoire\": 26378274,\n    'North Korea': 25778816,\n    Australia: 25499884,\n    Niger: 24206644,\n    'Taiwan*': 23816775,\n    'Sri Lanka': 21413249,\n    'Burkina Faso': 20903273,\n    Mali: 20250833,\n    Romania: 19237691,\n    Malawi: 19129952,\n    Chile: 19116201,\n    Kazakhstan: 18776707,\n    Zambia: 18383955,\n    Guatemala: 17915568,\n    Ecuador: 17643054,\n    'Syrian Arab Republic': 17500658,\n    Netherlands: 17134872,\n    Senegal: 16743927,\n    Cambodia: 16718965,\n    Chad: 16425864,\n    Somalia: 15893222,\n    Zimbabwe: 14862924,\n    Guinea: 13132795,\n    Rwanda: 12952218,\n    Benin: 12123200,\n    Burundi: 11890784,\n    Tunisia: 11818619,\n    Bolivia: 11673021,\n    Belgium: 11589623,\n    Haiti: 11402528,\n    Cuba: 11326616,\n    'South Sudan': 11193725,\n    'Dominican Republic': 10847910,\n    Czechia: 10708981,\n    Greece: 10423054,\n    Jordan: 10203134,\n    Portugal: 10196709,\n    Azerbaijan: 10139177,\n    Sweden: 10099265,\n    Honduras: 9904607,\n    UAE: 9890402,\n    Hungary: 9660351,\n    Tajikistan: 9537645,\n    Belarus: 9449323,\n    Austria: 9006398,\n    'Papua New Guinea': 8947024,\n    Serbia: 8737371,\n    Israel: 8655535,\n    Switzerland: 8654622,\n    Togo: 8278724,\n    'Sierra Leone': 7976983,\n    'Hong Kong': 7496981,\n    Laos: 7275560,\n    Paraguay: 7132538,\n    Bulgaria: 6948445,\n    Libya: 6871292,\n    Lebanon: 6825445,\n    Nicaragua: 6624554,\n    Kyrgyzstan: 6524195,\n    'El Salvador': 6486205,\n    Turkmenistan: 6031200,\n    Singapore: 5850342,\n    Denmark: 5792202,\n    Finland: 5540720,\n    'Congo (Kinshasa)': 5518087,\n    Slovakia: 5459642,\n    Norway: 5421241,\n    Oman: 5106626,\n    'State of Palestine': 5101414,\n    'Costa Rica': 5094118,\n    Liberia: 5057681,\n    Ireland: 4937786,\n    'Central African Republic': 4829767,\n    'New Zealand': 4822233,\n    Mauritania: 4649658,\n    Panama: 4314767,\n    Kuwait: 4270571,\n    Croatia: 4105267,\n    'Moldova, Republic of': 4033963,\n    Georgia: 3989167,\n    Eritrea: 3546421,\n    Uruguay: 3473730,\n    'Bosnia and Herzegovina': 3280819,\n    Mongolia: 3278290,\n    Armenia: 2963243,\n    Jamaica: 2961167,\n    Qatar: 2881053,\n    Albania: 2877797,\n    'Puerto Rico': 2860853,\n    Lithuania: 2722289,\n    Namibia: 2540905,\n    Gambia: 2416668,\n    Botswana: 2351627,\n    Gabon: 2225734,\n    Lesotho: 2142249,\n    Macedonia: 2083374,\n    Slovenia: 2078938,\n    GuineaBissau: 1968001,\n    Latvia: 1886198,\n    Bahrain: 1701575,\n    'Equatorial Guinea': 1402985,\n    'Trinidad and Tobago': 1399488,\n    Estonia: 1326535,\n    TimorLeste: 1318445,\n    Mauritius: 1271768,\n    Cyprus: 1207359,\n    Eswatini: 1160164,\n    Djibouti: 988000,\n    Fiji: 896445,\n    Réunion: 895312,\n    Comoros: 869601,\n    Guyana: 786552,\n    Bhutan: 771608,\n    'Solomon Islands': 686884,\n    Macao: 649335,\n    Montenegro: 628066,\n    Luxembourg: 625978,\n    'Western Sahara': 597339,\n    Suriname: 586632,\n    'Cabo Verde': 555987,\n    Maldives: 540544,\n    Malta: 441543,\n    Brunei: 437479,\n    Guadeloupe: 400124,\n    Belize: 397628,\n    Bahamas: 393244,\n    Martinique: 375265,\n    Iceland: 341243,\n    Vanuatu: 307145,\n    'French Guiana': 298682,\n    Barbados: 287375,\n    'New Caledonia': 285498,\n    'French Polynesia': 280908,\n    Mayotte: 272815,\n    'Sao Tome & Principe': 219159,\n    Samoa: 198414,\n    'Saint Lucia': 183627,\n    'Channel Islands': 173863,\n    Guam: 168775,\n    Curaçao: 164093,\n    Kiribati: 119449,\n    Micronesia: 115023,\n    Grenada: 112523,\n    'St. Vincent & Grenadines': 110940,\n    Aruba: 106766,\n    Tonga: 105695,\n    'U.S. Virgin Islands': 104425,\n    Seychelles: 98347,\n    'Antigua and Barbuda': 97929,\n    'Isle of Man': 85033,\n    Andorra: 77265,\n    Dominica: 71986,\n    'Cayman Islands': 65722,\n    Bermuda: 62278,\n    'Marshall Islands': 59190,\n    'Northern Mariana Islands': 57559,\n    Greenland: 56770,\n    'American Samoa': 55191,\n    'Saint Kitts & Nevis': 53199,\n    'Faeroe Islands': 48863,\n    'Sint Maarten': 42876,\n    'Turks and Caicos': 38717,\n    'Saint Martin': 38666,\n    Liechtenstein: 38128,\n    'San Marino': 33931,\n    'British Virgin Islands': 30231,\n    'Caribbean Netherlands': 26223,\n    'Cook Islands': 17564,\n    Tuvalu: 11792,\n    Bosnia: 3280819,\n    Monaco: 39242,\n\n    'Diamond Princess': 3711,\n    'MS Zaandam': 1829,\n    'West Bank and Gaza': 5101414,\n    Kosovo: 1810463,\n    Burma: 54409800,\n  },\n};\n","<template>\n  <div class=\"hello\">\n    Only show where current total deaths >=\n    <input\n      v-model=\"inputs.minDeaths\"\n      type=\"number\"\n      min=\"20\"\n      class=\"small-number\"\n    /> and start showing \"day 1\" after\n    <input\n      v-if=\"inputs.firstDayMode === 'deaths'\"\n      v-model=\"inputs.firstDayDeathsOver\"\n      type=\"number\"\n      min=\"1\"\n      class=\"small-number\"\n    />\n    <input\n      v-if=\"inputs.firstDayMode === 'deathsPerMillion'\"\n      v-model=\"inputs.firstDayDeathsPerMillionOver\"\n      type=\"number\"\n      min=\"1\"\n      class=\"small-number\"\n    />\n    (\n    <input type=\"radio\" v-model=\"inputs.firstDayMode\" value=\"deaths\" />deaths or\n    <input type=\"radio\" v-model=\"inputs.firstDayMode\" value=\"deathsPerMillion\" />deaths per million )\n    <br />\n    <span :title=\"tooltips.scalePopulation\">\n      Scale to Population:\n      <select v-model=\"inputs.scaleToCountryPopulation\">\n        <option value=\"0\">Do not scale by population</option>\n        <option value=\"1\">Scale by Deaths per Million (population)</option>\n        <option\n          v-for=\"item in topDeaths\"\n          :key=\"item.country\"\n          :value=\"{ population: countries.populations[item.country], name: item.country }\"\n        >{{ item.country }} ({{ countries.populations[item.country].toLocaleString() }})</option>\n      </select>\n    </span>\n    <div id=\"chart\">\n      <apexchart type=\"line\" height=\"650\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n    </div>\n    <ul>\n      <li>\n        As a business owner, I am very interested in predicting when we can SAFELY get back to work.\n        This was built to help predict where we are at in the pandemic (beginning, middle or end).\n      </li>\n      <li>\n        I was not 100% happy with the typical charts I was seeing:\n        <a\n          href=\"?mode=deaths&startAfter=100&scale=0&deaths=1000\"\n        >HERE (no population scale, timelines starts after deaths >= 100)</a>\n      </li>\n      <li>\n        So I built this one\n        <a\n          href=\"?mode=deathsPerMillion&startAfter=3&scale=1&deaths=3000\"\n        >HERE (scale to population (deaths per million), timelines starts after deaths per million >= 3)</a>\n      </li>\n      <li>\n        This chart uses death data because I feel it is more accurate. Case data is too inconsistent across countries/states.\n        Testing is all ove the place. So even though death data can be anywhere from 14-21 days LAGGING.\n        If we start seeing the rate slow down in deaths, we can be sure we are on the downtrend of cases.\n        However, even though this is way more accurate, there are many reports that even the deaths are under reported.\n        Some are dying and not getting tested, some are dying and not even making it to the hospital.\n        Reports in Italy say it could be under reported by even double in some villages.\n      </li>\n      <li>Many of the charts out there do not take into account population. So this one does that.</li>\n      <li>\n        Many of the charts out there start at graphing the data after the first 100 deaths. But again,\n        this DOES NOT take into account population so gives a false timeline comparison IMO. USA's first 100 deaths is\n        nothing compared to Luxembourg's first 100 deaths. So instead, this looks at when they hit 3 deaths per million.\n        Puts everyone at the same scale IMO.\n      </li>\n      <li>\n        I also wanted to be able to say \"If it were to spread here (in the USA), at the same rate in does in say Italy or\n        Spain or Iran, ... What would the death toll potentially look like?\" also \"If we were the same as another country,\n        are we 'just getting started' or are we 'past the peak', ...?\"\n      </li>\n      <li>TODO: get the height to fill the screen in a smart way</li>\n      <li>TODO: Allow user to change between first X deaths per million or first X deaths (so they can see the difference)</li>\n      <li>TODO: Allow user to change the \"X\" in the item above first 100 deaths, first 50 deaths or first 3/million or 5/million etc</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport populationContants from '@/constants/populations';\n\n// https://corona.lmao.ninja/docs/?urls.primaryName=version%202.0.0#/JHUCSSE/get_v2_historical\nconst historicalDataApiUrl = 'https://corona.lmao.ninja/v2/historical';\n\nconst firstDayModes = {\n  deaths: 'deaths',\n  deathsPerMillion: 'deathsPerMillion',\n};\n\nconsole.log(populationContants.populations);\n\nexport default {\n  name: 'HelloWorld',\n  data: () => ({\n    historical: [],\n    // todo: set this dynamically\n    lastDateName: '4/1/20',\n    refreshDataEveryMiliseconds: 1000 * 60 * 60 * 2, // every 2 hours\n    inputs: {\n      minDeaths: 3000,\n      scaleToCountryPopulation: '1',\n      firstDayMode: firstDayModes.deathsPerMillion,\n      firstDayDeathsOver: 100,\n      firstDayDeathsPerMillionOver: 3,\n    },\n    tooltips: {\n      scalePopulation:\n        // eslint-disable-next-line max-len\n        \"ex: Set it to USA. Then you can look at Italy or Spain and see what the death toll would be if the same % of population that died in Italy, were to die in the USA. So, if you think we are going to follow in Italy's footsteps, you can set it to USA, and look at Italy's numbers.\",\n    },\n    raw: {\n      historical: null,\n    },\n    countries: {\n      populations: populationContants.populations,\n    },\n    series: [],\n\n    chartOptions: {\n      customData: {\n        test: 100,\n      },\n      chart: {\n        // height: '100%',\n        type: 'line',\n        zoom: {\n          enabled: true,\n        },\n      },\n      dataLabels: {\n        enabled: false,\n      },\n      stroke: {\n        // curve: 'smooth',\n        curve: 'straight',\n      },\n      title: {\n        text: 'Total Deaths after X Deaths',\n        //   align: 'left',\n      },\n      grid: {\n        row: {\n          colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n          opacity: 0.5,\n        },\n      },\n      tooltip: {\n        x: {\n          formatter: (value) => `${value} days after`,\n        },\n        y: {\n          formatter: (value) => `${value.toLocaleString()}`,\n        },\n      },\n      // xaxis: {\n      //   categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\n      // },\n    },\n  }),\n  props: {\n    msg: String,\n  },\n  watch: {\n    inputs: {\n      // This will let Vue know to look inside the array\n      deep: true,\n\n      // We have to move our method to a handler field\n      handler() {\n        this.updateSeries();\n      },\n    },\n  },\n  methods: {\n    dataIsExpired() {\n      if (!localStorage.historicalExpired) return true;\n      // console.log('dataIsExpired localStorage.historicalExpired', localStorage.historicalExpired);\n      const dateTimeDataWasPulledLast = Date.parse(localStorage.historicalExpired);\n      // console.log('dataIsExpired dateTimeDataWasPulledLast', dateTimeDataWasPulledLast);\n      const dateTimeNow = Date.parse(new Date());\n      // console.log('dataIsExpired dateTimeNow', dateTimeNow);\n      // console.log('dataIsExpired diff', dateTimeNow - dateTimeDataWasPulledLast);\n      return dateTimeNow - dateTimeDataWasPulledLast > this.refreshDataEveryMiliseconds;\n    },\n    async getHistoricalData() {\n      console.log('getHistoricalData() PRE');\n      if (localStorage.historical && !this.dataIsExpired()) {\n        this.raw.historical = JSON.parse(localStorage.historical);\n        console.log('grabbed from local');\n      } else {\n        await axios.get(historicalDataApiUrl).then((r) => {\n          this.raw.historical = r.data;\n          localStorage.historical = JSON.stringify(r.data);\n          localStorage.historicalExpired = new Date();\n          console.log('grabbed from api');\n        });\n      }\n      console.log('getHistoricalData() POST');\n      // console.log(this.historical);\n    },\n    cleanUpData(data) {\n      console.log('cleanUpData() PRE');\n      // merged = { country: 'abc', deaths: [] }\n      const flags = [];\n      const merged = [];\n      for (let i = 0; i < data.length; i += 1) {\n        console.log(!flags[data[i].country]);\n        if (!flags[data[i].country]) {\n          flags[data[i].country] = true;\n          merged.push({\n            country: data[i].country,\n            deaths: this.getDeathsByCountry(data, data[i].country),\n          });\n        }\n      }\n\n      console.log('cleanUpData() POST');\n      return merged;\n    },\n    getDeathsByCountry(data, country) {\n      console.log('getDeathsByCountry', data.length, country);\n      const countryData = data.filter((item) => item.country === country);\n      if (countryData.length === 1) {\n        // console.log(countryData[0]);\n        return countryData[0].timeline.deaths;\n      }\n\n      // otherwise, we need to aggred gathe them by date (sum)\n      // get list of unique props\n      const deaths = countryData.map((item) => item.timeline.deaths);\n      // console.log(deaths);\n      console.log(deaths);\n      const merged = {};\n      const dataProps = Object.keys(deaths[0]);\n      for (let i = 0; i <= dataProps.length; i += 1) {\n        const dateProp = dataProps[i];\n        if (dateProp) {\n          merged[dateProp] = deaths\n            .map((item) => item[dateProp])\n            .reduce((prev, next) => prev + next);\n          console.log(dateProp, merged[dateProp]);\n        }\n      }\n      console.log(merged);\n      // console.log('3/30/20', val);\n      // countryData.sum(\"Amount\");\n      return merged;\n    },\n    getTopDeaths() {\n      return (\n        this.historical\n          .filter((a) => a.deaths[this.lastDateName] >= this.inputs.minDeaths)\n          // .sort((a, b) => b.deaths[this.lastDateName] - a.deaths[this.lastDateName]);\n          .sort((a, b) => b.country - a.country)\n      );\n    },\n    updateLabels() {\n      console.log('updateLabels PRE', this.chartOptions.title.text);\n\n      let startText = `(after having ${this.inputs.firstDayDeathsOver} deaths)`;\n      if (this.inputs.firstDayMode === firstDayModes.deathsPerMillion) {\n        startText = `(after having ${this.inputs.firstDayDeathsPerMillionOver} deaths per million)`;\n      }\n\n      let title = `Total Deaths ${startText}`;\n\n      if (this.inputs.scaleToCountryPopulation !== '0') {\n        if (this.inputs.scaleToCountryPopulation === '1') {\n          // eslint-disable-next-line max-len\n          title = `Deaths per Million: relative to population ${startText}`;\n        } else {\n          const country = this.inputs.scaleToCountryPopulation.name;\n          // eslint-disable-next-line operator-linebreak\n          title =\n            // eslint-disable-next-line operator-linebreak\n            `Deaths per country as if the country was the size of ${country} ` +\n            // eslint-disable-next-line operator-linebreak\n            `(this simulates if the spread was the same in each country, but had the population of ${country}. ` +\n            `This might tell you what the ${country} could be facing.)`;\n        }\n      }\n      this.chartOptions = {\n        title: {\n          text: title,\n        },\n      };\n      console.log('updateLabels POST', this.chartOptions.title.text);\n    },\n    updateSeries() {\n      console.log('updateSeries()');\n      clearTimeout(window.timersUpdate);\n      window.timersUpdate = setTimeout(() => {\n        console.log('updateSeries() IN');\n\n        this.updateLabels();\n\n        const rawData = this.getTopDeaths();\n        const series = [];\n        rawData.forEach((element) => {\n          let scaleMultiplier = 1;\n          const population = this.countries.populations[element.country];\n          if (this.inputs.scaleToCountryPopulation !== '0') {\n            // if we are showing percent of population\n            if (this.inputs.scaleToCountryPopulation === '1') {\n              scaleMultiplier = this.countries.populations[element.country];\n              if (!this.countries.populations[element.country]) {\n                console.log(element.country, this.countries.populations[element.country]);\n              }\n            } else {\n              // eslint-disable-next-line operator-linebreak\n              scaleMultiplier =\n                // eslint-disable-next-line operator-linebreak\n                this.inputs.scaleToCountryPopulation.population /\n                this.countries.populations[element.country];\n            }\n          }\n\n          const dataProps = Object.keys(element.deaths);\n          const data = [];\n          for (let i = 0; i <= dataProps.length; i += 1) {\n            // debugger;\n            const dateProp = dataProps[i];\n            const value = element.deaths[dateProp];\n            let addData = false;\n\n            console.log(\n              'this.inputs.firstDayMode',\n              this.inputs.firstDayMode,\n              firstDayModes.deathsPerMillion,\n            );\n            if (this.inputs.firstDayMode === firstDayModes.deathsPerMillion) {\n              console.log(\n                'this.inputs.firstDayMode',\n                this.getDeathsPerMillion(value, population),\n                this.inputs.firstDayDeathsPerMillionOver,\n              );\n              if (\n                // eslint-disable-next-line operator-linebreak\n                this.getDeathsPerMillion(value, population) >=\n                this.inputs.firstDayDeathsPerMillionOver\n              ) {\n                addData = true;\n              }\n            } else {\n              // based on straight death count\n              addData = value >= this.inputs.firstDayDeathsOver;\n            }\n\n            console.log('this.inputs.firstDayMode', addData);\n\n            if (addData) {\n              // if we are showing percent of population\n              // console.log(element.country, this.inputs.scaleToCountryPopulation, scaleMultiplier);\n              if (this.inputs.scaleToCountryPopulation === '1') {\n                // console.log(element.country, value, scaleMultiplier, value / population);\n                const deathsPerMillion = this.getDeathsPerMillion(value, population);\n                data.push(Math.round(deathsPerMillion));\n              } else {\n                data.push(Math.round(value * scaleMultiplier));\n              }\n            }\n          }\n\n          series.push({\n            name: element.country,\n            data,\n            color: 'red',\n          });\n        });\n        this.series = series;\n      }, 100);\n      // return [\n      //   {\n      //     name: 'Test',\n      //     data: [10, 41, 35, 51, 49, 62, 69, 91, 148],\n      //   },\n      //   {\n      //     name: 'Test2',\n      //     data: [41, 35, 51, 49, 62, 69, 91, 148],\n      //   },\n      // ];\n    },\n    getDeathsPerMillion(deaths, population) {\n      return (deaths / population) * 1000000;\n    },\n    initValues() {\n      this.lastDateName = this.getLastDate();\n    },\n    initInputs() {\n      const params = new URLSearchParams(window.location.search);\n      if (params.has('mode')) {\n        if (params.get('mode') === firstDayModes.deaths) {\n          this.inputs.firstDayMode = firstDayModes.deaths;\n        } else {\n          this.inputs.firstDayMode = firstDayModes.deathsPerMillion;\n        }\n      }\n\n      if (params.has('startAfter') && parseInt(params.get('startAfter'), 10)) {\n        if (this.inputs.firstDayMode === firstDayModes.deaths) {\n          this.inputs.firstDayDeathsOver = parseInt(params.get('startAfter'), 10);\n        } else {\n          this.inputs.firstDayDeathsPerMillionOver = parseInt(params.get('startAfter'), 10);\n        }\n      }\n      if (params.has('deaths') && parseInt(params.get('deaths'), 10)) {\n        this.inputs.minDeaths = parseInt(params.get('deaths'), 10);\n      }\n      if (params.has('scale')) {\n        this.inputs.scaleToCountryPopulation = params.get('scale');\n      }\n    },\n    getLastDate() {\n      // returns '4/1/20'\n      const today = new Date();\n      const yesterday = new Date();\n      yesterday.setDate(today.getDate() - 1); // get yesterday\n\n      const day = yesterday.getDate();\n      const month = yesterday.getMonth() + 1;\n      const year = String(yesterday.getFullYear()).substr(-2);\n\n      return `${month}/${day}/${year}`;\n    },\n  },\n  computed: {\n    topDeaths() {\n      return this.getTopDeaths();\n    },\n  },\n  created() {\n    this.initValues();\n    this.initInputs();\n    this.getHistoricalData().then(() => {\n      this.historical = this.cleanUpData(this.raw.historical);\n\n      this.updateSeries();\n    });\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: disc;\n  text-align: left;\n}\n\na {\n  color: #42b983;\n}\n.small-number {\n  width: 50px;\n}\n#chart {\n  border: solid 1px #999;\n  height: 90vh;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./HelloWorld.vue?vue&type=template&id=22088c29&scoped=true&\"\nimport script from \"./HelloWorld.vue?vue&type=script&lang=js&\"\nexport * from \"./HelloWorld.vue?vue&type=script&lang=js&\"\nimport style0 from \"./HelloWorld.vue?vue&type=style&index=0&id=22088c29&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"22088c29\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <HelloWorld msg=\"Welcome to Your Vue.js App\" />\n  </div>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=35a26135&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport VueApexCharts from 'vue-apexcharts';\nimport App from './App.vue';\n\nVue.use(VueApexCharts);\n\nVue.component('apexchart', VueApexCharts);\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount('#app');\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=22088c29&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HelloWorld.vue?vue&type=style&index=0&id=22088c29&scoped=true&lang=scss&\""],"sourceRoot":""}