{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?5a4c","webpack:///./src/components/Chart.vue?37f1","webpack:///./src/constants/populations.js","webpack:///./src/services/date.service.js","webpack:///src/components/Chart.vue","webpack:///./src/components/Chart.vue?0609","webpack:///./src/components/Chart.vue","webpack:///./src/components/ExplainerText.vue?7436","webpack:///./src/components/ExplainerText.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/App.vue?c650","webpack:///./src/components/ExplainerText.vue?aef2","webpack:///./src/components/Chart.vue?e4ea"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","staticClass","_m","directives","rawName","inputs","expression","domProps","on","$event","target","composing","$set","_v","_s","lastDateName","$$selectedVal","Array","filter","options","selected","map","val","_value","multiple","firstDayMode","_e","_l","item","index","tooltips","scalePopulation","country","population","countries","populations","toLocaleString","chartOptions","series","China","India","USA","Indonesia","Pakistan","Brazil","Nigeria","Bangladesh","Russia","Mexico","Japan","Ethiopia","Philippines","Egypt","Vietnam","Turkey","Iran","Germany","Thailand","UK","France","Italy","Myanmar","Kenya","Colombia","Spain","Uganda","Argentina","Algeria","Sudan","Ukraine","Iraq","Afghanistan","Poland","Canada","Morocco","Uzbekistan","Peru","Angola","Malaysia","Mozambique","Ghana","Yemen","Nepal","Venezuela","Madagascar","Cameroon","Australia","Niger","Mali","Romania","Malawi","Chile","Kazakhstan","Zambia","Guatemala","Ecuador","Netherlands","Senegal","Cambodia","Chad","Somalia","Zimbabwe","Guinea","Rwanda","Benin","Burundi","Tunisia","Bolivia","Belgium","Haiti","Cuba","Czechia","Greece","Jordan","Portugal","Azerbaijan","Sweden","Honduras","UAE","Hungary","Tajikistan","Belarus","Austria","Serbia","Israel","Switzerland","Togo","Laos","Paraguay","Bulgaria","Libya","Lebanon","Nicaragua","Kyrgyzstan","Turkmenistan","Singapore","Denmark","Finland","Slovakia","Norway","Oman","Liberia","Ireland","Mauritania","Panama","Kuwait","Croatia","Georgia","Eritrea","Uruguay","Mongolia","Armenia","Jamaica","Qatar","Albania","Lithuania","Namibia","Gambia","Botswana","Gabon","Lesotho","Macedonia","Slovenia","GuineaBissau","Latvia","Bahrain","Estonia","TimorLeste","Mauritius","Cyprus","Eswatini","Djibouti","Fiji","Réunion","Comoros","Guyana","Bhutan","Macao","Montenegro","Luxembourg","Suriname","Maldives","Malta","Brunei","Guadeloupe","Belize","Bahamas","Martinique","Iceland","Vanuatu","Barbados","Mayotte","Samoa","Guam","Curaçao","Kiribati","Micronesia","Grenada","Aruba","Tonga","Seychelles","Andorra","Dominica","Bermuda","Greenland","Liechtenstein","Tuvalu","Bosnia","Monaco","Kosovo","Burma","ensureDate","date","Date","newDate","setDate","subtract","days","getDate","today","yesterday","parse","stringDate","dateParts","split","format","theDate","day","month","getMonth","year","String","getFullYear","substr","getLastDate","deaths","deathsPerMillion","chronological","props","msg","watch","deep","handler","updateSeries","methods","dataIsExpired","localStorage","historicalExpired","dateTimeNow","dateTimeDataWasPulledLast","refreshDataEveryMiliseconds","cleanUpData","flags","merged","getDeathsByCountry","getDates","keys","countryData","timeline","dateProp","getTopDeaths","historical","a","updateChartOptions","showNew","label","firstDayModes","startText","scaleToCountryPopulation","title","yAxisTitle","subtitle","categories","dates","firstDayIndex","xaxis","strokeWidth","fill","multiplier","width","text","stroke","yaxis","isDataAboveThreshold","undefined","firstDayDeathsOver","clearTimeout","timersUpdate","setTimeout","rawData","forEach","scaleMultiplier","prevValue","element","prevDateProp","addData","Math","round","getDeathsPerMillion","initValues","initInputs","params","has","parseInt","firstDayDeathsPerMillionOver","minDeaths","computed","dateKeys","topDeaths","sort","created","globalData","$data","getHistoricalData","then","component","script","components","Chart","ExplainerText","Vue","use","VueApexCharts","config","productionTip","render","h","App","$mount"],"mappings":"aACE,SAASA,EAAqBC,GAQ7B,IAPA,IAMIC,EAAUC,EANVC,EAAWH,EAAK,GAChBI,EAAcJ,EAAK,GACnBK,EAAiBL,EAAK,GAIHM,EAAI,EAAGC,EAAW,GACpCD,EAAIH,EAASK,OAAQF,IACzBJ,EAAUC,EAASG,GAChBG,OAAOC,UAAUC,eAAeC,KAAKC,EAAiBX,IAAYW,EAAgBX,IACpFK,EAASO,KAAKD,EAAgBX,GAAS,IAExCW,EAAgBX,GAAW,EAE5B,IAAID,KAAYG,EACZK,OAAOC,UAAUC,eAAeC,KAAKR,EAAaH,KACpDc,EAAQd,GAAYG,EAAYH,IAG/Be,GAAqBA,EAAoBhB,GAE5C,MAAMO,EAASC,OACdD,EAASU,OAATV,GAOD,OAHAW,EAAgBJ,KAAKK,MAAMD,EAAiBb,GAAkB,IAGvDe,IAER,SAASA,IAER,IADA,IAAIC,EACIf,EAAI,EAAGA,EAAIY,EAAgBV,OAAQF,IAAK,CAG/C,IAFA,IAAIgB,EAAiBJ,EAAgBZ,GACjCiB,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAed,OAAQgB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BX,EAAgBY,KAAcF,GAAY,GAE3CA,IACFL,EAAgBQ,OAAOpB,IAAK,GAC5Be,EAASM,EAAoBA,EAAoBC,EAAIN,EAAe,KAItE,OAAOD,EAIR,IAAIQ,EAAmB,GAKnBhB,EAAkB,CACrB,IAAO,GAGJK,EAAkB,GAGtB,SAASS,EAAoB1B,GAG5B,GAAG4B,EAAiB5B,GACnB,OAAO4B,EAAiB5B,GAAU6B,QAGnC,IAAIC,EAASF,EAAiB5B,GAAY,CACzCK,EAAGL,EACH+B,GAAG,EACHF,QAAS,IAUV,OANAf,EAAQd,GAAUW,KAAKmB,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAG/DI,EAAOC,GAAI,EAGJD,EAAOD,QAKfH,EAAoBM,EAAIlB,EAGxBY,EAAoBO,EAAIL,EAGxBF,EAAoBQ,EAAI,SAASL,EAASM,EAAMC,GAC3CV,EAAoBW,EAAER,EAASM,IAClC3B,OAAO8B,eAAeT,EAASM,EAAM,CAAEI,YAAY,EAAMC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASZ,GACX,qBAAXa,QAA0BA,OAAOC,aAC1CnC,OAAO8B,eAAeT,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DpC,OAAO8B,eAAeT,EAAS,aAAc,CAAEe,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,kBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKxC,OAAOyC,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBxC,OAAO8B,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBQ,EAAEc,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAAStB,GAChC,IAAIM,EAASN,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAO,YACtC,WAA8B,OAAOA,GAEtC,OADAJ,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASgB,EAAQC,GAAY,OAAO9C,OAAOC,UAAUC,eAAeC,KAAK0C,EAAQC,IAGzG5B,EAAoB6B,EAAI,GAExB,IAAIC,EAAaC,OAAO,gBAAkBA,OAAO,iBAAmB,GAChEC,EAAmBF,EAAW3C,KAAKsC,KAAKK,GAC5CA,EAAW3C,KAAOf,EAClB0D,EAAaA,EAAWG,QACxB,IAAI,IAAItD,EAAI,EAAGA,EAAImD,EAAWjD,OAAQF,IAAKP,EAAqB0D,EAAWnD,IAC3E,IAAIU,EAAsB2C,EAI1BzC,EAAgBJ,KAAK,CAAC,EAAE,kBAEjBM,K,iKCvJL,EAAS,WAAa,IAAIyC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,QAAQ,CAACF,EAAG,SAASA,EAAG,kBAAkB,IAC5JG,EAAkB,GCDlB,EAAS,WAAa,IAAIP,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACI,YAAY,mBAAmB,CAACJ,EAAG,MAAM,CAACI,YAAY,oBAAoB,CAACJ,EAAG,MAAM,CAACI,YAAY,kBAAkB,CAACJ,EAAG,MAAM,CAACI,YAAY,mBAAmB,CAACR,EAAIS,GAAG,GAAGL,EAAG,QAAQ,CAACM,WAAW,CAAC,CAACnC,KAAK,QAAQoC,QAAQ,UAAU3B,MAAOgB,EAAIY,OAAgB,UAAEC,WAAW,qBAAqBL,YAAY,eAAeF,MAAM,CAAC,KAAO,SAAS,IAAM,MAAMQ,SAAS,CAAC,MAASd,EAAIY,OAAgB,WAAGG,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,WAAqBlB,EAAImB,KAAKnB,EAAIY,OAAQ,YAAaI,EAAOC,OAAOjC,WAAWoB,EAAG,QAAQ,CAACI,YAAY,iBAAiB,CAACR,EAAIoB,GAAG,WAAWpB,EAAIqB,GAAGrB,EAAIsB,cAAc,SAASlB,EAAG,MAAM,CAACI,YAAY,mBAAmB,CAACJ,EAAG,QAAQ,CAACJ,EAAIoB,GAAG,kBAAkBhB,EAAG,SAAS,CAACM,WAAW,CAAC,CAACnC,KAAK,QAAQoC,QAAQ,UAAU3B,MAAOgB,EAAIY,OAAc,QAAEC,WAAW,mBAAmBE,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIO,EAAgBC,MAAM3E,UAAU4E,OAAO1E,KAAKiE,EAAOC,OAAOS,SAAQ,SAASjD,GAAG,OAAOA,EAAEkD,YAAWC,KAAI,SAASnD,GAAG,IAAIoD,EAAM,WAAYpD,EAAIA,EAAEqD,OAASrD,EAAEO,MAAM,OAAO6C,KAAO7B,EAAImB,KAAKnB,EAAIY,OAAQ,UAAWI,EAAOC,OAAOc,SAAWR,EAAgBA,EAAc,OAAO,CAACnB,EAAG,SAAS,CAACU,SAAS,CAAC,OAAQ,IAAQ,CAACd,EAAIoB,GAAG,kCAAkChB,EAAG,SAAS,CAACU,SAAS,CAAC,OAAQ,IAAO,CAACd,EAAIoB,GAAG,iCAAiChB,EAAG,MAAM,CAACI,YAAY,kBAAkB,CAACJ,EAAG,MAAM,CAACI,YAAY,mBAAmB,CAACJ,EAAG,QAAQ,CAACJ,EAAIoB,GAAG,aAAahB,EAAG,SAAS,CAACM,WAAW,CAAC,CAACnC,KAAK,QAAQoC,QAAQ,UAAU3B,MAAOgB,EAAIY,OAAmB,aAAEC,WAAW,wBAAwBE,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIO,EAAgBC,MAAM3E,UAAU4E,OAAO1E,KAAKiE,EAAOC,OAAOS,SAAQ,SAASjD,GAAG,OAAOA,EAAEkD,YAAWC,KAAI,SAASnD,GAAG,IAAIoD,EAAM,WAAYpD,EAAIA,EAAEqD,OAASrD,EAAEO,MAAM,OAAO6C,KAAO7B,EAAImB,KAAKnB,EAAIY,OAAQ,eAAgBI,EAAOC,OAAOc,SAAWR,EAAgBA,EAAc,OAAO,CAACnB,EAAG,SAAS,CAACE,MAAM,CAAC,MAAQ,qBAAqB,CAACN,EAAIoB,GAAG,mCAAmChB,EAAG,SAAS,CAACE,MAAM,CAAC,MAAQ,WAAW,CAACN,EAAIoB,GAAG,uBAAuBhB,EAAG,SAAS,CAACE,MAAM,CAAC,MAAQ,kBAAkB,CAACN,EAAIoB,GAAG,+BAA+BhB,EAAG,QAAQ,CAACJ,EAAIoB,GAAG,SAAsC,WAA5BpB,EAAIY,OAAOoB,aAA2B5B,EAAG,QAAQ,CAACM,WAAW,CAAC,CAACnC,KAAK,QAAQoC,QAAQ,UAAU3B,MAAOgB,EAAIY,OAAyB,mBAAEC,WAAW,8BAA8BL,YAAY,eAAeF,MAAM,CAAC,KAAO,SAAS,IAAM,KAAKQ,SAAS,CAAC,MAASd,EAAIY,OAAyB,oBAAGG,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,WAAqBlB,EAAImB,KAAKnB,EAAIY,OAAQ,qBAAsBI,EAAOC,OAAOjC,WAAWgB,EAAIiC,KAAkC,qBAA5BjC,EAAIY,OAAOoB,aAAqC5B,EAAG,QAAQ,CAACM,WAAW,CAAC,CAACnC,KAAK,QAAQoC,QAAQ,UAAU3B,MAAOgB,EAAIY,OAAmC,6BAAEC,WAAW,wCAAwCL,YAAY,eAAeF,MAAM,CAAC,KAAO,SAAS,IAAM,KAAKQ,SAAS,CAAC,MAASd,EAAIY,OAAmC,8BAAGG,GAAG,CAAC,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,WAAqBlB,EAAImB,KAAKnB,EAAIY,OAAQ,+BAAgCI,EAAOC,OAAOjC,WAAWgB,EAAIiC,KAAkC,kBAA5BjC,EAAIY,OAAOoB,aAAkC5B,EAAG,SAAS,CAACM,WAAW,CAAC,CAACnC,KAAK,QAAQoC,QAAQ,UAAU3B,MAAOgB,EAAIY,OAAoB,cAAEC,WAAW,yBAAyBE,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIO,EAAgBC,MAAM3E,UAAU4E,OAAO1E,KAAKiE,EAAOC,OAAOS,SAAQ,SAASjD,GAAG,OAAOA,EAAEkD,YAAWC,KAAI,SAASnD,GAAG,IAAIoD,EAAM,WAAYpD,EAAIA,EAAEqD,OAASrD,EAAEO,MAAM,OAAO6C,KAAO7B,EAAImB,KAAKnB,EAAIY,OAAQ,gBAAiBI,EAAOC,OAAOc,SAAWR,EAAgBA,EAAc,OAAOvB,EAAIkC,GAAIlC,EAAY,UAAE,SAASmC,EAAKC,GAAO,OAAOhC,EAAG,SAAS,CAACd,IAAI8C,EAAMtB,SAAS,CAAC,MAAQsB,IAAQ,CAACpC,EAAIoB,GAAGpB,EAAIqB,GAAGc,SAAW,GAAGnC,EAAIiC,OAAO7B,EAAG,MAAM,CAACI,YAAY,mBAAmB,CAACJ,EAAG,QAAQ,CAACI,YAAY,iBAAiB,CAACR,EAAIoB,GAAG,0BAA0BhB,EAAG,OAAO,CAACE,MAAM,CAAC,MAAQN,EAAIqC,SAASC,kBAAkB,CAAClC,EAAG,SAAS,CAACM,WAAW,CAAC,CAACnC,KAAK,QAAQoC,QAAQ,UAAU3B,MAAOgB,EAAIY,OAA+B,yBAAEC,WAAW,oCAAoCE,GAAG,CAAC,OAAS,SAASC,GAAQ,IAAIO,EAAgBC,MAAM3E,UAAU4E,OAAO1E,KAAKiE,EAAOC,OAAOS,SAAQ,SAASjD,GAAG,OAAOA,EAAEkD,YAAWC,KAAI,SAASnD,GAAG,IAAIoD,EAAM,WAAYpD,EAAIA,EAAEqD,OAASrD,EAAEO,MAAM,OAAO6C,KAAO7B,EAAImB,KAAKnB,EAAIY,OAAQ,2BAA4BI,EAAOC,OAAOc,SAAWR,EAAgBA,EAAc,OAAO,CAACnB,EAAG,SAAS,CAACE,MAAM,CAAC,MAAQ,MAAM,CAACN,EAAIoB,GAAG,kBAAkBhB,EAAG,SAAS,CAACE,MAAM,CAAC,MAAQ,MAAM,CAACN,EAAIoB,GAAG,8CAA8CpB,EAAIkC,GAAIlC,EAAa,WAAE,SAASmC,GAAM,OAAO/B,EAAG,SAAS,CAACd,IAAI6C,EAAKI,QAAQzB,SAAS,CAAC,MAAQ,CAAE0B,WAAYxC,EAAIyC,UAAUC,YAAYP,EAAKI,SAAUhE,KAAM4D,EAAKI,WAAY,CAACvC,EAAIoB,GAAG,0BAA0BpB,EAAIqB,GAAGc,EAAKI,SAAS,KAAKvC,EAAIqB,GAAGrB,EAAIyC,UAAUC,YAAYP,EAAKI,SAASI,kBAAkB,WAAU,WAAWvC,EAAG,MAAM,CAACE,MAAM,CAAC,GAAK,UAAU,CAACF,EAAG,YAAY,CAACE,MAAM,CAAC,KAAO,OAAO,OAAS,MAAM,QAAUN,EAAI4C,aAAa,OAAS5C,EAAI6C,WAAW,MAC91J,EAAkB,CAAC,WAAa,IAAI7C,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,QAAQ,CAACJ,EAAIoB,GAAG,kCAAkChB,EAAG,OAAO,CAACI,YAAY,iBAAiB,CAACR,EAAIoB,GAAG,mBAAmBpB,EAAIoB,GAAG,mB,6MCE1N,GACbsB,YAAa,CACXI,MAAO,WACPC,MAAO,WACPC,IAAK,UACLC,UAAW,UACXC,SAAU,UACVC,OAAQ,UACRC,QAAS,UACTC,WAAY,UACZC,OAAQ,UACRC,OAAQ,UACRC,MAAO,UACPC,SAAU,UACVC,YAAa,UACbC,MAAO,UACPC,QAAS,SACT,WAAY,SACZC,OAAQ,SACRC,KAAM,SACNC,QAAS,SACTC,SAAU,SACVC,GAAI,SACJC,OAAQ,SACRC,MAAO,SACP,+BAAgC,SAChC,eAAgB,SAChBC,QAAS,SACTC,MAAO,SACP,WAAY,SACZC,SAAU,SACVC,MAAO,SACPC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACTC,MAAO,SACPC,QAAS,SACTC,KAAM,SACNC,YAAa,SACbC,OAAQ,SACRC,OAAQ,SACRC,QAAS,SACT,eAAgB,SAChBC,WAAY,SACZC,KAAM,SACNC,OAAQ,SACRC,SAAU,SACVC,WAAY,SACZC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,UAAW,SACXC,WAAY,SACZC,SAAU,SACV,gBAAiB,SACjB,cAAe,SACfC,UAAW,SACXC,MAAO,SACP,UAAW,SACX,YAAa,SACb,eAAgB,SAChBC,KAAM,SACNC,QAAS,SACTC,OAAQ,SACRC,MAAO,SACPC,WAAY,SACZC,OAAQ,SACRC,UAAW,SACXC,QAAS,SACT,uBAAwB,SACxBC,YAAa,SACbC,QAAS,SACTC,SAAU,SACVC,KAAM,SACNC,QAAS,SACTC,SAAU,SACVC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,QAAS,SACTC,QAAS,SACTC,QAAS,SACTC,QAAS,SACTC,MAAO,SACPC,KAAM,SACN,cAAe,SACf,qBAAsB,SACtBC,QAAS,SACTC,OAAQ,SACRC,OAAQ,SACRC,SAAU,SACVC,WAAY,SACZC,OAAQ,SACRC,SAAU,QACVC,IAAK,QACLC,QAAS,QACTC,WAAY,QACZC,QAAS,QACTC,QAAS,QACT,mBAAoB,QACpBC,OAAQ,QACRC,OAAQ,QACRC,YAAa,QACbC,KAAM,QACN,eAAgB,QAChB,YAAa,QACbC,KAAM,QACNC,SAAU,QACVC,SAAU,QACVC,MAAO,QACPC,QAAS,QACTC,UAAW,QACXC,WAAY,QACZ,cAAe,QACfC,aAAc,QACdC,UAAW,QACXC,QAAS,QACTC,QAAS,QACT,mBAAoB,QACpBC,SAAU,QACVC,OAAQ,QACRC,KAAM,QACN,qBAAsB,QACtB,aAAc,QACdC,QAAS,QACTC,QAAS,QACT,2BAA4B,QAC5B,cAAe,QACfC,WAAY,QACZC,OAAQ,QACRC,OAAQ,QACRC,QAAS,QACT,uBAAwB,QACxBC,QAAS,QACTC,QAAS,QACTC,QAAS,QACT,yBAA0B,QAC1BC,SAAU,QACVC,QAAS,QACTC,QAAS,QACTC,MAAO,QACPC,QAAS,QACT,cAAe,QACfC,UAAW,QACXC,QAAS,QACTC,OAAQ,QACRC,SAAU,QACVC,MAAO,QACPC,QAAS,QACTC,UAAW,QACXC,SAAU,QACVC,aAAc,QACdC,OAAQ,QACRC,QAAS,QACT,oBAAqB,QACrB,sBAAuB,QACvBC,QAAS,QACTC,WAAY,QACZC,UAAW,QACXC,OAAQ,QACRC,SAAU,QACVC,SAAU,MACVC,KAAM,OACNC,UAAS,OACTC,QAAS,OACTC,OAAQ,OACRC,OAAQ,OACR,kBAAmB,OACnBC,MAAO,OACPC,WAAY,OACZC,WAAY,OACZ,iBAAkB,OAClBC,SAAU,OACV,aAAc,OACdC,SAAU,OACVC,MAAO,OACPC,OAAQ,OACRC,WAAY,OACZC,OAAQ,OACRC,QAAS,OACTC,WAAY,OACZC,QAAS,OACTC,QAAS,OACT,gBAAiB,OACjBC,SAAU,OACV,gBAAiB,OACjB,mBAAoB,OACpBC,QAAS,OACT,sBAAuB,OACvBC,MAAO,OACP,cAAe,OACf,kBAAmB,OACnBC,KAAM,OACNC,UAAS,OACTC,SAAU,OACVC,WAAY,OACZC,QAAS,OACT,2BAA4B,OAC5BC,MAAO,OACPC,MAAO,OACP,sBAAuB,OACvBC,WAAY,MACZ,sBAAuB,MACvB,cAAe,MACfC,QAAS,MACTC,SAAU,MACV,iBAAkB,MAClBC,QAAS,MACT,mBAAoB,MACpB,2BAA4B,MAC5BC,UAAW,MACX,iBAAkB,MAClB,sBAAuB,MACvB,iBAAkB,MAClB,eAAgB,MAChB,mBAAoB,MACpB,eAAgB,MAChBC,cAAe,MACf,aAAc,MACd,yBAA0B,MAC1B,wBAAyB,MACzB,eAAgB,MAChBC,OAAQ,MACRC,OAAQ,QACRC,OAAQ,MAER,mBAAoB,KACpB,aAAc,KACd,qBAAsB,QACtBC,OAAQ,QACRC,MAAO,WCzOLC,G,UAAa,SAACC,GAElB,GAAIA,aAAgBC,KAClB,OAAOD,EAGT,IAAME,EAAU,IAAID,KAGpB,OADAC,EAAQC,QAAQH,GACTE,IAGHE,EAAW,SAACJ,EAAMK,GAEtB,GAAa,IAATA,EACF,OAAON,EAAWC,GAGpB,IAAME,EAAU,IAAID,KAEpB,OADAC,EAAQC,QAAQH,EAAKM,UAAYD,GAC1BH,GAGHK,EAAQ,kBAAM,IAAIN,MAElBO,EAAY,kBAAMJ,EAASG,IAAS,IAEpCE,EAAQ,SAACC,GACb,IAAMC,EAAYD,EAAWE,MAAM,KACnC,OAAO,IAAIX,KAAKU,EAAU,GAAIA,EAAU,GAAK,EAAGA,EAAU,KAGtDE,EAAS,SAACb,GAEd,IAAMc,EAAUf,EAAWC,GACrBe,EAAMD,EAAQR,UACdU,EAAQF,EAAQG,WAAa,EAC7BC,EAAOC,OAAOL,EAAQM,eAAeC,QAAQ,GAEnD,gBAAUL,EAAV,YAAmBD,EAAnB,YAA0BG,IAGb,GACbI,YADa,WAGX,OAAOT,EAAOL,MAGhBD,QACAC,YACAK,SACAd,aACAU,QACAL,YC6BF,yDAEA,GACEmB,OAAQ,SACRC,iBAAkB,mBAClBC,cAAe,iBAKjB,KAEA,GACE7Q,KAAM,aACNpC,KAAM,WAAR,OACA,cAEA,sBACA,iCACA,QACA,WACA,cACA,6BACA,gCACA,iBACA,uBACA,gCAEA,UACA,gBAEQ,yRAER,KACA,iBAEA,WACA,2BAEA,UAEA,cACA,YACA,UAEA,OAEA,YACA,MACA,aAOA,QAEA,iBAEA,2DAGA,OACA,oCAGA,MACA,KACA,iCACA,aAGA,SACA,gBACA,wBAEA,UACA,mBAOA,6CACA,MAEA,iCAGA,wBACA,YAGA,2BACA,0BACA,4BAEA,gDAEA,8GACA,kCADA,4CAEA,EAFA,eAEA,EAFA,aAEA,mBAFA,YAWA,OACA,UAOEkT,MAAO,CACLC,IAAKR,QAEPS,MAAO,CACL3O,OAAQ,CAEN4O,MAAM,EAGNC,QALN,WAMQxP,KAAKyP,kBAIXC,QAAS,CACPC,cADJ,WAEM,IAAKC,aAAaC,kBAAmB,OAAO,EAE5C,IAAN,6CAEA,uBAGM,OAAOC,EAAcC,EAA4B/P,KAAKgQ,6BAExD,kBAXJ,WAWA,4JAEA,8CAFA,gBAGA,wDAHA,sCAMA,6BACA,wBACA,kDACA,2CATA,8CAgBIC,YA3BJ,SA2BA,GAKM,IAFA,IAAN,KACA,KACA,oBAEaC,EAAMhU,EAAKM,GAAG8F,WACjB4N,EAAMhU,EAAKM,GAAG8F,UAAW,EACzB6N,EAAOnT,KAAK,CACVsF,QAASpG,EAAKM,GAAG8F,QACjB2M,OAAQjP,KAAKoQ,mBAAmBlU,EAAMA,EAAKM,GAAG8F,YAMpD,OAAO6N,GAETE,SA9CJ,SA8CA,GACM,OAAO1T,OAAO2T,KAAKpU,IAErBkU,mBAjDJ,SAiDA,KAEM,IAAN,gDACM,GAA2B,IAAvBG,EAAY7T,OAEd,OAAO6T,EAAY,GAAGC,SAASvB,OAUjC,IALA,IAAN,iDAGA,KACA,sBAdA,WAeA,GACQ,IAAR,OACYwB,IACFN,EAAOM,GAAYxB,EAC7B,iBAAY,OAAZ,QACA,sBAAY,OAAZ,SALA,0BAYM,OAAOkB,GAETO,aA9EJ,WA8EA,WACM,OAAO1Q,KAAK2Q,WAAWnP,QAC7B,YAAQ,OAGEoP,EAAE3B,OAAO,EAAnB,mCACA,uBACA,mCACA,KACA,8BAKI4B,mBA5FJ,WA+FM,IAAN,UACU7Q,KAAKW,OAAOmQ,UACdC,EAAQ,SAGV,IAAN,qCACA,4BACU/Q,KAAKW,OAAOoB,eAAiBiP,EAAc9B,iBAC7C+B,EAAY,gBAApB,uEACA,sCACQA,EAAY,gBAApB,kDAGM,IAAN,yBACA,eAEM,GAA6C,MAAzCjR,KAAKW,OAAOuQ,yBACd,GAA6C,MAAzClR,KAAKW,OAAOuQ,yBAEdC,EAAQ,6CACRC,EAAa,GAAvB,gDACA,CACU,IAAV,4CACUD,EAAQ,qEAAlB,6BAEUC,EAAa,cAAvB,qEAEUC,EACV,wIACA,EADA,oDACA,EADA,gBAIM,IAAN,GACQC,WAAY,MAEd,GAAItR,KAAKW,OAAOoB,eAAiBiP,EAAc7B,cAAe,CAE5D,IAAR,2CAGA,4CACA,8BAEUoC,EAAQA,EAAMzR,MAAME,KAAKW,OAAO6Q,gBAElCC,EAAQ,CACNH,WAAYC,GAKhB,IAAN,sBACA,WACA,WACA,WACMG,EAAYC,KAAK,EAAIC,GACrBF,EAAY,GAAK,EAAIE,EAGrB,IAAN,GACQC,MAAOH,GAGT1R,KAAK2C,aAAe,CAClBwO,MAAO,CACLW,KAAMX,GAERE,SAAU,CACRS,KAAMT,GAERI,MAAR,EACQM,OAAR,EACQC,MAAO,CACf,CACU,MAAV,CACY,KAAZ,OAOIC,qBAjLJ,SAiLA,OACM,GAAIjS,KAAKW,OAAOoB,eAAiBiP,EAAc7B,eAE7C,QAAc+C,IAAVnT,EAAqB,CACvB,GAAc,OAAVoD,EACF,OAAO,EAET,GAAIA,GAASnC,KAAKW,OAAO6Q,cACvB,OAAO,OAGnB,kDAaQ,OAAOzS,GAASiB,KAAKW,OAAOwR,mBAP5B,GACR,wEAEU,OAAO,EAMX,OAAO,GAET1C,aA7MJ,WA6MA,WAEM2C,aAAaxS,OAAOyS,cACpBzS,OAAOyS,aAAeC,YAAW,WAG/B,EAAR,qBAGQ,IAAR,uCACU,MAAqB,QAAd1B,EAAEtO,SACnB,EACA,qDAEA,KACQiQ,EAAQC,SAAQ,SAAxB,GACU,IAAV,IACA,qCACA,MAAc,EAAd,kCAEA,MAAgB,EAAhB,iCACcC,EAAkB,EAAhC,iCACmB,EAAnB,kCAIcA,EACd,6CACA,oCAMU,IAFA,IAAV,wBACA,KACA,sBAEY,IAAZ,OACA,cACA,IACY,GAAI,EAAhB,qBACc,IAAd,SACcC,EAAYC,EAAQ1D,OAAO2D,GAG7B,IAAZ,gCAcY,GAJI,EAAhB,iBACc7T,GAAS2T,GAGPG,EAGF,GAAd,MAAkB,EAAlB,iCAEgB,IAAhB,6BACgB3W,EAAKc,KAAK8V,KAAKC,MAAyB,GAAnB7D,GAA2B,SAEhDhT,EAAKc,KAAK8V,KAAKC,MAAMhU,EAAQ0T,EAAkB,IAAQ,IAK7D7P,EAAO5F,KAAK,CACVsB,KAAMqU,EAAQrQ,QACdpG,KAAZ,OAGQ,EAAR,WACA,MAYI8W,oBAtSJ,SAsSA,KACM,OAAO,EAAb,OAEIC,WAzSJ,WA0SMjT,KAAKqB,aAAe,EAA1B,eAEI6R,WA5SJ,WA6SM,IAAN,8CACUC,EAAOC,IAAI,UACTD,EAAOxU,IAAI,UAAYqS,EAAc/B,OACvCjP,KAAKW,OAAOoB,aAAeiP,EAAc/B,OACnD,gCACUjP,KAAKW,OAAOoB,aAAeiP,EAAc7B,cAEzCnP,KAAKW,OAAOoB,aAAeiP,EAAc9B,kBAIzCiE,EAAOC,IAAI,SACc,QAAvBD,EAAOxU,IAAI,UACbqB,KAAKW,OAAOmQ,SAAU,GAItBqC,EAAOC,IAAI,eAAiBC,SAASF,EAAOxU,IAAI,cAAe,KAAO,IACpEqB,KAAKW,OAAOoB,eAAiBiP,EAAc/B,OAC7CjP,KAAKW,OAAOwR,mBAAqBkB,SAASF,EAAOxU,IAAI,cAAe,IAEpEqB,KAAKW,OAAO2S,6BAA+BD,SAASF,EAAOxU,IAAI,cAAe,KAG9EwU,EAAOC,IAAI,WAAaC,SAASF,EAAOxU,IAAI,UAAW,KAAO,IAChEqB,KAAKW,OAAO4S,UAAYF,SAASF,EAAOxU,IAAI,UAAW,KAErDwU,EAAOC,IAAI,UACTC,SAASF,EAAOxU,IAAI,UAAW,KAAO,IACxCqB,KAAKW,OAAOuQ,yBAA2BiC,EAAOxU,IAAI,YAK1D6U,SAAU,CACRC,SADJ,WAEM,OAAOzT,KAAKqQ,SAASrQ,KAAK2Q,WAAW,GAAG1B,SAE1CyE,UAJJ,WAKM,OAAO1T,KAAK0Q,eAAeiD,MAAK,SAAtC,qCAGEC,QAjdF,WAidA,WAEIC,EAAa7T,KAAK8T,MAElB9T,KAAKiT,aACLjT,KAAKkT,aACLlT,KAAK+T,oBAAoBC,MAAK,WAC5B,EAAN,2CAEM,EAAN,oBCxjB+U,I,wBCQ3UC,EAAY,eACd,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,EAAAA,E,QCnBX,EAAS,WAAa,IAAIlU,EAAIC,KAASC,EAAGF,EAAIG,eAAsBH,EAAIK,MAAMD,GAAO,OAAOJ,EAAIS,GAAG,IACnG,EAAkB,CAAC,WAAa,IAAIT,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,KAAK,CAACA,EAAG,KAAK,CAACA,EAAG,SAAS,CAACJ,EAAIoB,GAAG,2BAA2BhB,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIoB,GAAG,+LAA+LhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,gmBAAgmBhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,6GAA6GhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,qXAAqXhB,EAAG,KAAK,CAACA,EAAG,SAAS,CAACJ,EAAIoB,GAAG,6CAA6ChB,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIoB,GAAG,sDAAsDhB,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,oDAAoD,CAACN,EAAIoB,GAAG,oEAAoEhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,8CAA8ChB,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,4CAA4C,CAACN,EAAIoB,GAAG,gEAAgEhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,2CAA2ChB,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,4DAA4D,CAACN,EAAIoB,GAAG,mIAAmIhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,0DAA0DhB,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,2DAA2D,CAACN,EAAIoB,GAAG,kIAAkIhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,4SAA4ShB,EAAG,MAAMJ,EAAIoB,GAAG,uBAAuBhB,EAAG,SAAS,CAACJ,EAAIoB,GAAG,oCAAoCpB,EAAIoB,GAAG,4FAA8FhB,EAAG,KAAK,CAACA,EAAG,SAAS,CAACJ,EAAIoB,GAAG,mBAAmBhB,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIoB,GAAG,0JAA0JhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,wQAAwQhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,wMAAwMhB,EAAG,KAAK,CAACA,EAAG,SAAS,CAACJ,EAAIoB,GAAG,mBAAmBhB,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIoB,GAAG,wFAAwFhB,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,8FAA8F,OAAS,WAAW,CAACN,EAAIoB,GAAG,mGAAmGhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,2EAA2EhB,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,yCAAyC,OAAS,WAAW,CAACN,EAAIoB,GAAG,8CAA8ChB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,uHAAuHhB,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,qCAAqC,OAAS,WAAW,CAACN,EAAIoB,GAAG,0CAA0ChB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,uHAAuHhB,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,6CAA6C,OAAS,WAAW,CAACN,EAAIoB,GAAG,kDAAkDhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,oHAAoHhB,EAAG,MAAMA,EAAG,IAAI,CAACE,MAAM,CAAC,KAAO,2FAA2F,OAAS,WAAW,CAACN,EAAIoB,GAAG,oGAAoGhB,EAAG,KAAK,CAACA,EAAG,SAAS,CAACJ,EAAIoB,GAAG,aAAahB,EAAG,KAAK,CAACA,EAAG,KAAK,CAACJ,EAAIoB,GAAG,0JAA0JhB,EAAG,KAAK,CAACI,YAAY,QAAQ,CAACR,EAAIoB,GAAG,yGAA6GhB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,wCAAwChB,EAAG,KAAK,CAACJ,EAAIoB,GAAG,8ICAvxL+S,G,UAAS,IAMT,EAAY,eACdA,EACA,EACA,GACA,EACA,KACA,WACA,MAIa,I,QCPf,GACE5V,KAAM,MACN6V,WAAY,CACVC,MAAJ,EACIC,cAAJ,ICf8T,ICQ1T,G,UAAY,eACd,EACA,EACA/T,GACA,EACA,KACA,KACA,OAIa,I,QCffgU,OAAIC,IAAIC,KAERF,OAAIL,UAAU,YAAaO,KAE3BF,OAAIG,OAAOC,eAAgB,EAE3B,IAAIJ,OAAI,CACNK,OAAQ,SAACC,GAAD,OAAOA,EAAEC,MAChBC,OAAO,S,2DCZV,yBAAmf,EAAG,G,oCCAtf,yBAA0iB,EAAG,G,2DCA7iB,yBAAkiB,EAAG,G","file":"js/app.18f0b012.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Chart'),_c('ExplainerText')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart-container\"},[_c('div',{staticClass:\"inputs-container\"},[_c('div',{staticClass:\"inputs group-1\"},[_c('div',{staticClass:\"input-container\"},[_vm._m(0),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.minDeaths),expression:\"inputs.minDeaths\"}],staticClass:\"small-number\",attrs:{\"type\":\"number\",\"min\":\"20\"},domProps:{\"value\":(_vm.inputs.minDeaths)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, \"minDeaths\", $event.target.value)}}}),_c('label',{staticClass:\"hide-on-small\"},[_vm._v(\" (as of \"+_vm._s(_vm.lastDateName)+\")\")])]),_c('div',{staticClass:\"input-container\"},[_c('label',[_vm._v(\"Data Points:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.showNew),expression:\"inputs.showNew\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.inputs, \"showNew\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{domProps:{\"value\":false}},[_vm._v(\"Show Total/Cumulative Deaths\")]),_c('option',{domProps:{\"value\":true}},[_vm._v(\"Show Daily/New Deaths\")])])])]),_c('div',{staticClass:\"inputs group-2\"},[_c('div',{staticClass:\"input-container\"},[_c('label',[_vm._v(\"X-axis:\")]),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.firstDayMode),expression:\"inputs.firstDayMode\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.inputs, \"firstDayMode\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"deathsPerMillion\"}},[_vm._v(\"Days after deaths per million\")]),_c('option',{attrs:{\"value\":\"deaths\"}},[_vm._v(\"Days after deaths\")]),_c('option',{attrs:{\"value\":\"chronological\"}},[_vm._v(\"Chronological (by date)\")])]),_c('label',[_vm._v(\" >=\")]),(_vm.inputs.firstDayMode === 'deaths')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.firstDayDeathsOver),expression:\"inputs.firstDayDeathsOver\"}],staticClass:\"small-number\",attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.inputs.firstDayDeathsOver)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, \"firstDayDeathsOver\", $event.target.value)}}}):_vm._e(),(_vm.inputs.firstDayMode === 'deathsPerMillion')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.firstDayDeathsPerMillionOver),expression:\"inputs.firstDayDeathsPerMillionOver\"}],staticClass:\"small-number\",attrs:{\"type\":\"number\",\"min\":\"0\"},domProps:{\"value\":(_vm.inputs.firstDayDeathsPerMillionOver)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, \"firstDayDeathsPerMillionOver\", $event.target.value)}}}):_vm._e(),(_vm.inputs.firstDayMode === 'chronological')?_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.firstDayIndex),expression:\"inputs.firstDayIndex\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.inputs, \"firstDayIndex\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.dateKeys),function(item,index){return _c('option',{key:index,domProps:{\"value\":index}},[_vm._v(_vm._s(item))])}),0):_vm._e()]),_c('div',{staticClass:\"input-container\"},[_c('label',{staticClass:\"hide-on-small\"},[_vm._v(\"Scale to Population:\")]),_c('span',{attrs:{\"title\":_vm.tooltips.scalePopulation}},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs.scaleToCountryPopulation),expression:\"inputs.scaleToCountryPopulation\"}],on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.$set(_vm.inputs, \"scaleToCountryPopulation\", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{\"value\":\"0\"}},[_vm._v(\"Do not scale\")]),_c('option',{attrs:{\"value\":\"1\"}},[_vm._v(\"Scale by Deaths per Million (population)\")]),_vm._l((_vm.topDeaths),function(item){return _c('option',{key:item.country,domProps:{\"value\":{ population: _vm.countries.populations[item.country], name: item.country }}},[_vm._v(\"Scale to population of \"+_vm._s(item.country)+\" (\"+_vm._s(_vm.countries.populations[item.country].toLocaleString())+\")\")])})],2)])])])]),_c('div',{attrs:{\"id\":\"chart\"}},[_c('apexchart',{attrs:{\"type\":\"line\",\"height\":\"650\",\"options\":_vm.chartOptions,\"series\":_vm.series}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',[_vm._v(\" Only include countries where \"),_c('span',{staticClass:\"hide-on-small\"},[_vm._v(\"total current\")]),_vm._v(\" deaths >= \")])}]\n\nexport { render, staticRenderFns }","// manually pulled from\n// https://www.worldometers.info/world-population/population-by-country/\n// looking for a good API\nexport default {\n  populations: {\n    China: 1439323776,\n    India: 1380004385,\n    USA: 331002651,\n    Indonesia: 273523615,\n    Pakistan: 220892340,\n    Brazil: 212559417,\n    Nigeria: 206139589,\n    Bangladesh: 164689383,\n    Russia: 145934462,\n    Mexico: 128932753,\n    Japan: 126476461,\n    Ethiopia: 114963588,\n    Philippines: 109581078,\n    Egypt: 102334404,\n    Vietnam: 97338579,\n    'DR Congo': 89561403,\n    Turkey: 84339067,\n    Iran: 83992949,\n    Germany: 83783942,\n    Thailand: 69799978,\n    UK: 67886011,\n    France: 65273511,\n    Italy: 60461826,\n    'Tanzania, United Republic of': 59734218,\n    'South Africa': 59308690,\n    Myanmar: 54409800,\n    Kenya: 53771296,\n    'S. Korea': 51269185,\n    Colombia: 50882891,\n    Spain: 46754778,\n    Uganda: 45741007,\n    Argentina: 45195774,\n    Algeria: 43851044,\n    Sudan: 43849260,\n    Ukraine: 43733762,\n    Iraq: 40222493,\n    Afghanistan: 38928346,\n    Poland: 37846611,\n    Canada: 37742154,\n    Morocco: 36910560,\n    'Saudi Arabia': 34813871,\n    Uzbekistan: 33469203,\n    Peru: 32971854,\n    Angola: 32866272,\n    Malaysia: 32365999,\n    Mozambique: 31255435,\n    Ghana: 31072940,\n    Yemen: 29825964,\n    Nepal: 29136808,\n    Venezuela: 28435940,\n    Madagascar: 27691018,\n    Cameroon: 26545863,\n    \"Côte d'Ivoire\": 26378274,\n    'North Korea': 25778816,\n    Australia: 25499884,\n    Niger: 24206644,\n    'Taiwan*': 23816775,\n    'Sri Lanka': 21413249,\n    'Burkina Faso': 20903273,\n    Mali: 20250833,\n    Romania: 19237691,\n    Malawi: 19129952,\n    Chile: 19116201,\n    Kazakhstan: 18776707,\n    Zambia: 18383955,\n    Guatemala: 17915568,\n    Ecuador: 17643054,\n    'Syrian Arab Republic': 17500658,\n    Netherlands: 17134872,\n    Senegal: 16743927,\n    Cambodia: 16718965,\n    Chad: 16425864,\n    Somalia: 15893222,\n    Zimbabwe: 14862924,\n    Guinea: 13132795,\n    Rwanda: 12952218,\n    Benin: 12123200,\n    Burundi: 11890784,\n    Tunisia: 11818619,\n    Bolivia: 11673021,\n    Belgium: 11589623,\n    Haiti: 11402528,\n    Cuba: 11326616,\n    'South Sudan': 11193725,\n    'Dominican Republic': 10847910,\n    Czechia: 10708981,\n    Greece: 10423054,\n    Jordan: 10203134,\n    Portugal: 10196709,\n    Azerbaijan: 10139177,\n    Sweden: 10099265,\n    Honduras: 9904607,\n    UAE: 9890402,\n    Hungary: 9660351,\n    Tajikistan: 9537645,\n    Belarus: 9449323,\n    Austria: 9006398,\n    'Papua New Guinea': 8947024,\n    Serbia: 8737371,\n    Israel: 8655535,\n    Switzerland: 8654622,\n    Togo: 8278724,\n    'Sierra Leone': 7976983,\n    'Hong Kong': 7496981,\n    Laos: 7275560,\n    Paraguay: 7132538,\n    Bulgaria: 6948445,\n    Libya: 6871292,\n    Lebanon: 6825445,\n    Nicaragua: 6624554,\n    Kyrgyzstan: 6524195,\n    'El Salvador': 6486205,\n    Turkmenistan: 6031200,\n    Singapore: 5850342,\n    Denmark: 5792202,\n    Finland: 5540720,\n    'Congo (Kinshasa)': 5518087,\n    Slovakia: 5459642,\n    Norway: 5421241,\n    Oman: 5106626,\n    'State of Palestine': 5101414,\n    'Costa Rica': 5094118,\n    Liberia: 5057681,\n    Ireland: 4937786,\n    'Central African Republic': 4829767,\n    'New Zealand': 4822233,\n    Mauritania: 4649658,\n    Panama: 4314767,\n    Kuwait: 4270571,\n    Croatia: 4105267,\n    'Moldova, Republic of': 4033963,\n    Georgia: 3989167,\n    Eritrea: 3546421,\n    Uruguay: 3473730,\n    'Bosnia and Herzegovina': 3280819,\n    Mongolia: 3278290,\n    Armenia: 2963243,\n    Jamaica: 2961167,\n    Qatar: 2881053,\n    Albania: 2877797,\n    'Puerto Rico': 2860853,\n    Lithuania: 2722289,\n    Namibia: 2540905,\n    Gambia: 2416668,\n    Botswana: 2351627,\n    Gabon: 2225734,\n    Lesotho: 2142249,\n    Macedonia: 2083374,\n    Slovenia: 2078938,\n    GuineaBissau: 1968001,\n    Latvia: 1886198,\n    Bahrain: 1701575,\n    'Equatorial Guinea': 1402985,\n    'Trinidad and Tobago': 1399488,\n    Estonia: 1326535,\n    TimorLeste: 1318445,\n    Mauritius: 1271768,\n    Cyprus: 1207359,\n    Eswatini: 1160164,\n    Djibouti: 988000,\n    Fiji: 896445,\n    Réunion: 895312,\n    Comoros: 869601,\n    Guyana: 786552,\n    Bhutan: 771608,\n    'Solomon Islands': 686884,\n    Macao: 649335,\n    Montenegro: 628066,\n    Luxembourg: 625978,\n    'Western Sahara': 597339,\n    Suriname: 586632,\n    'Cabo Verde': 555987,\n    Maldives: 540544,\n    Malta: 441543,\n    Brunei: 437479,\n    Guadeloupe: 400124,\n    Belize: 397628,\n    Bahamas: 393244,\n    Martinique: 375265,\n    Iceland: 341243,\n    Vanuatu: 307145,\n    'French Guiana': 298682,\n    Barbados: 287375,\n    'New Caledonia': 285498,\n    'French Polynesia': 280908,\n    Mayotte: 272815,\n    'Sao Tome & Principe': 219159,\n    Samoa: 198414,\n    'Saint Lucia': 183627,\n    'Channel Islands': 173863,\n    Guam: 168775,\n    Curaçao: 164093,\n    Kiribati: 119449,\n    Micronesia: 115023,\n    Grenada: 112523,\n    'St. Vincent & Grenadines': 110940,\n    Aruba: 106766,\n    Tonga: 105695,\n    'U.S. Virgin Islands': 104425,\n    Seychelles: 98347,\n    'Antigua and Barbuda': 97929,\n    'Isle of Man': 85033,\n    Andorra: 77265,\n    Dominica: 71986,\n    'Cayman Islands': 65722,\n    Bermuda: 62278,\n    'Marshall Islands': 59190,\n    'Northern Mariana Islands': 57559,\n    Greenland: 56770,\n    'American Samoa': 55191,\n    'Saint Kitts & Nevis': 53199,\n    'Faeroe Islands': 48863,\n    'Sint Maarten': 42876,\n    'Turks and Caicos': 38717,\n    'Saint Martin': 38666,\n    Liechtenstein: 38128,\n    'San Marino': 33931,\n    'British Virgin Islands': 30231,\n    'Caribbean Netherlands': 26223,\n    'Cook Islands': 17564,\n    Tuvalu: 11792,\n    Bosnia: 3280819,\n    Monaco: 39242,\n\n    'Diamond Princess': 3711,\n    'MS Zaandam': 1829,\n    'West Bank and Gaza': 5101414,\n    Kosovo: 1810463,\n    Burma: 54409800,\n  },\n};\n","const ensureDate = (date) => {\n  // console.log('ensureDate: date', date);\n  if (date instanceof Date) {\n    return date;\n  }\n  // console.log('not date');\n  const newDate = new Date();\n  // console.log('ensureDate: newDate', newDate);\n  newDate.setDate(date);\n  return newDate;\n};\n\nconst subtract = (date, days) => {\n  // console.log('subtract', date, days);\n  if (days === 0) {\n    return ensureDate(date);\n  }\n\n  const newDate = new Date();\n  newDate.setDate(date.getDate() - days);\n  return newDate;\n};\n\nconst today = () => new Date();\n\nconst yesterday = () => subtract(today(), 1);\n\nconst parse = (stringDate) => {\n  const dateParts = stringDate.split('/');\n  return new Date(dateParts[2], dateParts[0] - 1, dateParts[1]);\n};\n\nconst format = (date) => {\n  // console.log('date', date);\n  const theDate = ensureDate(date);\n  const day = theDate.getDate();\n  const month = theDate.getMonth() + 1;\n  const year = String(theDate.getFullYear()).substr(-2);\n\n  return `${month}/${day}/${year}`;\n};\n\nexport default {\n  getLastDate() {\n    // returns '4/1/20'\n    return format(yesterday());\n  },\n\n  today,\n  yesterday,\n  format,\n  ensureDate,\n  parse,\n  subtract,\n};\n","<template>\n  <div class=\"chart-container\">\n    <div class=\"inputs-container\">\n      <div class=\"inputs group-1\">\n        <div class=\"input-container\">\n          <label>\n            Only include countries where\n            <span class=\"hide-on-small\">total current</span> deaths >=\n          </label>\n\n          <input v-model=\"inputs.minDeaths\" type=\"number\" min=\"20\" class=\"small-number\" />\n          <label class=\"hide-on-small\">&nbsp;(as of {{lastDateName}})</label>\n        </div>\n\n        <div class=\"input-container\">\n          <label>Data Points:</label>\n          <select v-model=\"inputs.showNew\">\n            <option :value=\"false\">Show Total/Cumulative Deaths</option>\n            <option :value=\"true\">Show Daily/New Deaths</option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"inputs group-2\">\n        <div class=\"input-container\">\n          <label>X-axis:</label>\n          <select v-model=\"inputs.firstDayMode\">\n            <option value=\"deathsPerMillion\">Days after deaths per million</option>\n            <option value=\"deaths\">Days after deaths</option>\n            <option value=\"chronological\">Chronological (by date)</option>\n          </select>\n          <label>&nbsp;>=</label>\n          <input\n            v-if=\"inputs.firstDayMode === 'deaths'\"\n            v-model=\"inputs.firstDayDeathsOver\"\n            type=\"number\"\n            min=\"0\"\n            class=\"small-number\"\n          />\n          <input\n            v-if=\"inputs.firstDayMode === 'deathsPerMillion'\"\n            v-model=\"inputs.firstDayDeathsPerMillionOver\"\n            type=\"number\"\n            min=\"0\"\n            class=\"small-number\"\n          />\n          <select v-if=\"inputs.firstDayMode === 'chronological'\" v-model=\"inputs.firstDayIndex\">\n            <option v-for=\"(item, index) in dateKeys\" :key=\"index\" :value=\"index\">{{ item }}</option>\n          </select>\n        </div>\n\n        <div class=\"input-container\">\n          <label class=\"hide-on-small\">Scale to Population:</label>\n          <span :title=\"tooltips.scalePopulation\">\n            <select v-model=\"inputs.scaleToCountryPopulation\">\n              <option value=\"0\">Do not scale</option>\n              <option value=\"1\">Scale by Deaths per Million (population)</option>\n              <option\n                v-for=\"item in topDeaths\"\n                :key=\"item.country\"\n                :value=\"{ population: countries.populations[item.country], name: item.country }\"\n              >Scale to population of {{ item.country }} ({{ countries.populations[item.country].toLocaleString() }})</option>\n            </select>\n          </span>\n        </div>\n      </div>\n    </div>\n\n    <div id=\"chart\">\n      <apexchart type=\"line\" height=\"650\" :options=\"chartOptions\" :series=\"series\"></apexchart>\n    </div>\n  </div>\n</template>\n\n<script>\n/* eslint-disable operator-linebreak */\n\nimport axios from 'axios';\nimport populationContants from '@/constants/populations';\nimport dateService from '@/services/date.service';\n\n// https://corona.lmao.ninja/docs/?urls.primaryName=version%202.0.0#/JHUCSSE/get_v2_historical\nconst historicalDataApiUrl = 'https://corona.lmao.ninja/v2/historical?lastdays=all';\n\nconst firstDayModes = {\n  deaths: 'deaths',\n  deathsPerMillion: 'deathsPerMillion',\n  chronological: 'chronological',\n};\n\nconsole.log(populationContants.populations);\n\nlet globalData = {};\n\nexport default {\n  name: 'HelloWorld',\n  data: () => ({\n    historical: [],\n    // todo: set this dynamically\n    lastDateName: '4/1/20',\n    refreshDataEveryMiliseconds: 1000 * 60 * 60 * 2, // every 2 hours\n    inputs: {\n      showNew: false,\n      minDeaths: 1000,\n      scaleToCountryPopulation: '1',\n      firstDayMode: firstDayModes.deathsPerMillion,\n      firstDayIndex: 40, // 3/2/2020\n      firstDayDeathsOver: 100,\n      firstDayDeathsPerMillionOver: 3,\n    },\n    tooltips: {\n      scalePopulation:\n        // eslint-disable-next-line max-len\n        \"ex: Set it to USA. Then you can look at Italy or Spain and see what the death toll would be if the same % of population that died in Italy, were to die in the USA. So, if you think we are going to follow in Italy's footsteps, you can set it to USA, and look at Italy's numbers.\",\n    },\n    raw: {\n      historical: null,\n    },\n    countries: {\n      populations: populationContants.populations,\n    },\n    series: [],\n\n    chartOptions: {\n      customData: {\n        test: 100,\n      },\n      chart: {\n        // height: '100%',\n        type: 'line',\n        zoom: {\n          enabled: true,\n        },\n      },\n      // dataLabels: {\n      //   enabled: true,\n      //   enabledOnSeries: [0],\n      // },\n      stroke: {\n        // curve: 'smooth',\n        curve: 'straight',\n        // todo: make this smarter\n        width: [6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n        // dashArray: [0, 8, 5],\n      },\n      title: {\n        text: 'Total Deaths after X Deaths',\n        //   align: 'left',\n      },\n      grid: {\n        row: {\n          colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n          opacity: 0.5,\n        },\n      },\n      tooltip: {\n        onDatasetHover: {\n          highlightDataSeries: false,\n        },\n        shared: false,\n        custom: (e) => {\n          // console.log('globalData', globalData);\n          // console.log('globalData', globalData.lastDateName);\n          // console.log('e: ', e);\n          // console.log('this.lastDateName): ', e.w.globals);\n          // console.log('this.lastDateName): ', this.lastDateName);\n          // console.log(e);\n          const countryName = e.w.globals.seriesNames[e.seriesIndex];\n          let actualDay = '?';\n\n          const seriesLength = e.series[e.seriesIndex].length;\n\n          // this data point is not on this series\n          if (e.dataPointIndex + 1 > seriesLength) {\n            return null;\n          }\n\n          const daysBack = seriesLength - e.dataPointIndex - 1;\n          const date = dateService.parse(globalData.lastDateName);\n          actualDay = dateService.format(dateService.subtract(date, daysBack));\n\n          const value = e.series[e.seriesIndex][e.dataPointIndex];\n\n          return `<div style='padding:6px;'><div style='display:inline-block;border-radius:5px;background-color:${\n            e.w.globals.colors[e.seriesIndex]\n          };width:10px;height:10px;'></div> ${countryName} on ${actualDay}: ${value.toLocaleString()}</div>`;\n        },\n        // y: {\n        //   formatter: (value) => `${value.toLocaleString()} (more info)`,\n        //   title: {\n        //     formatter: (seriesName) => `${seriesName} (more info)`,\n        //   },\n        // },\n      },\n      yaxis: {\n        min: 0,\n      },\n      // xaxis: {\n      //   categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\n      // },\n    },\n  }),\n  props: {\n    msg: String,\n  },\n  watch: {\n    inputs: {\n      // This will let Vue know to look inside the array\n      deep: true,\n\n      // We have to move our method to a handler field\n      handler() {\n        this.updateSeries();\n      },\n    },\n  },\n  methods: {\n    dataIsExpired() {\n      if (!localStorage.historicalExpired) return true;\n      // console.log('dataIsExpired localStorage.historicalExpired', localStorage.historicalExpired);\n      const dateTimeDataWasPulledLast = Date.parse(localStorage.historicalExpired);\n      // console.log('dataIsExpired dateTimeDataWasPulledLast', dateTimeDataWasPulledLast);\n      const dateTimeNow = Date.parse(new Date());\n      // console.log('dataIsExpired dateTimeNow', dateTimeNow);\n      // console.log('dataIsExpired diff', dateTimeNow - dateTimeDataWasPulledLast);\n      return dateTimeNow - dateTimeDataWasPulledLast > this.refreshDataEveryMiliseconds;\n    },\n    async getHistoricalData() {\n      console.log('getHistoricalData() PRE');\n      if (localStorage.historicalNew && !this.dataIsExpired()) {\n        this.raw.historical = JSON.parse(localStorage.historicalNew);\n        console.log('grabbed from local');\n      } else {\n        await axios.get(historicalDataApiUrl).then((r) => {\n          this.raw.historical = r.data;\n          localStorage.historicalNew = JSON.stringify(r.data);\n          localStorage.historicalExpired = new Date();\n          console.log('grabbed from api');\n        });\n      }\n      console.log('getHistoricalData() POST');\n      // console.log(this.historical);\n    },\n    cleanUpData(data) {\n      console.log('cleanUpData() PRE');\n      // merged = { country: 'abc', deaths: [] }\n      const flags = [];\n      const merged = [];\n      for (let i = 0; i < data.length; i += 1) {\n        console.log(!flags[data[i].country]);\n        if (!flags[data[i].country]) {\n          flags[data[i].country] = true;\n          merged.push({\n            country: data[i].country,\n            deaths: this.getDeathsByCountry(data, data[i].country),\n          });\n        }\n      }\n\n      console.log('cleanUpData() POST');\n      return merged;\n    },\n    getDates(data) {\n      return Object.keys(data);\n    },\n    getDeathsByCountry(data, country) {\n      console.log('getDeathsByCountry', data.length, country);\n      const countryData = data.filter((item) => item.country === country);\n      if (countryData.length === 1) {\n        // console.log(countryData[0]);\n        return countryData[0].timeline.deaths;\n      }\n\n      // otherwise, we need to aggred gathe them by date (sum)\n      // get list of unique props\n      const deaths = countryData.map((item) => item.timeline.deaths);\n      // console.log(deaths);\n      console.log(deaths);\n      const merged = {};\n      const dataProps = this.getDates(deaths[0]);\n      for (let i = 0; i <= dataProps.length; i += 1) {\n        const dateProp = dataProps[i];\n        if (dateProp) {\n          merged[dateProp] = deaths\n            .map((item) => item[dateProp])\n            .reduce((prev, next) => prev + next);\n          console.log(dateProp, merged[dateProp]);\n        }\n      }\n      console.log(merged);\n      // console.log('3/30/20', val);\n      // countryData.sum(\"Amount\");\n      return merged;\n    },\n    getTopDeaths() {\n      return this.historical.filter(\n        (a) =>\n          // if current deaths are greater than ..\n          // eslint-disable-next-line implicit-arrow-linebreak\n          a.deaths[this.lastDateName] >= this.inputs.minDeaths &&\n          this.isDataAboveThreshold(\n            this.countries.populations[a.country],\n            null,\n            a.deaths[this.lastDateName],\n          ),\n      );\n      // .sort((a, b) => b.country - a.country)\n    },\n    updateChartOptions() {\n      console.log('updateChartOptions PRE', this.chartOptions.title.text);\n\n      let label = 'Total';\n      if (this.inputs.showNew) {\n        label = 'Daily';\n      }\n\n      let yAxisTitle = `${label} Deaths per Country`;\n      let startText = 'Chronological (by date)';\n      if (this.inputs.firstDayMode === firstDayModes.deathsPerMillion) {\n        startText = `after having ${this.inputs.firstDayDeathsPerMillionOver} deaths per million`;\n      } else if (this.inputs.firstDayMode === firstDayModes.deaths) {\n        startText = `after having ${this.inputs.firstDayDeathsOver} deaths`;\n      }\n\n      let title = `${label} Deaths`;\n      let subtitle = `${startText}`;\n\n      if (this.inputs.scaleToCountryPopulation !== '0') {\n        if (this.inputs.scaleToCountryPopulation === '1') {\n          // eslint-disable-next-line max-len\n          title = 'Deaths per Million: relative to population';\n          yAxisTitle = `${label} Deaths per Million per Country`;\n        } else {\n          const country = this.inputs.scaleToCountryPopulation.name;\n          title = `Deaths per country: Simulated as if each country were the size of ${country} (${startText})`;\n\n          yAxisTitle = `SIMULATED: ${label} Deaths IF each country had the population of ${country}`;\n\n          subtitle =\n            `If you think ${country} is going to follow in the footsteps of a country, ` +\n            `you can look at that country's data scaled to ${country}'s population. This might tell you where ${country} is heading.`;\n        }\n      }\n      let xaxis = {\n        categories: null,\n      };\n      if (this.inputs.firstDayMode === firstDayModes.chronological) {\n        console.log('this.historical[0]', this.historical[0].deaths);\n        let dates = this.getDates(this.historical[0].deaths);\n\n        if (\n          this.inputs.firstDayMode === firstDayModes.chronological &&\n          this.inputs.firstDayIndex > 0\n        ) {\n          dates = dates.slice(this.inputs.firstDayIndex);\n        }\n        xaxis = {\n          categories: dates,\n        };\n      }\n\n      // lets look at how much data we have...\n      const data = this.getTopDeaths();\n      const seriesCount = data.length;\n      const strokeWidth = Array(seriesCount);\n      const multiplier = seriesCount <= 6 ? 2 : 1;\n      strokeWidth.fill(1 * multiplier);\n      strokeWidth[0] = 3 * multiplier; // usa\n      // console.log(data);\n      // debugger;\n      const stroke = {\n        width: strokeWidth,\n      };\n\n      this.chartOptions = {\n        title: {\n          text: title,\n        },\n        subtitle: {\n          text: subtitle,\n        },\n        xaxis,\n        stroke,\n        yaxis: [\n          {\n            title: {\n              text: yAxisTitle,\n            },\n          },\n        ],\n      };\n      // console.log('updateChartOptions POST', this.chartOptions.title.text);\n    },\n    isDataAboveThreshold(population, index, value) {\n      if (this.inputs.firstDayMode === firstDayModes.chronological) {\n        // include them all\n        if (value !== undefined) {\n          if (index === null) {\n            return true;\n          }\n          if (index >= this.inputs.firstDayIndex) {\n            return true;\n          }\n        }\n      } else if (this.inputs.firstDayMode === firstDayModes.deathsPerMillion) {\n        // console.log(\n        //   'this.inputs.firstDayMode',\n        //   this.getDeathsPerMillion(value, population),\n        //   this.inputs.firstDayDeathsPerMillionOver,\n        // );\n        if (\n          this.getDeathsPerMillion(value, population) >= this.inputs.firstDayDeathsPerMillionOver\n        ) {\n          return true;\n        }\n      } else {\n        // based on straight death count\n        return value >= this.inputs.firstDayDeathsOver;\n      }\n      return false;\n    },\n    updateSeries() {\n      // console.log('updateSeries()');\n      clearTimeout(window.timersUpdate);\n      window.timersUpdate = setTimeout(() => {\n        // console.log('updateSeries() IN');\n\n        this.updateChartOptions();\n\n        // eslint-disable-next-line arrow-body-style\n        const rawData = this.getTopDeaths().sort((a, b) => {\n          return a.country === 'USA'\n            ? -1\n            : b.deaths[this.lastDateName] - a.deaths[this.lastDateName];\n        });\n        const series = [];\n        rawData.forEach((element) => {\n          let scaleMultiplier = 1;\n          const population = this.countries.populations[element.country];\n          if (this.inputs.scaleToCountryPopulation !== '0') {\n            // if we are showing percent of population\n            if (this.inputs.scaleToCountryPopulation === '1') {\n              scaleMultiplier = this.countries.populations[element.country];\n              if (!this.countries.populations[element.country]) {\n                // console.log(element.country, this.countries.populations[element.country]);\n              }\n            } else {\n              scaleMultiplier =\n                this.inputs.scaleToCountryPopulation.population /\n                this.countries.populations[element.country];\n            }\n          }\n\n          const dataProps = Object.keys(element.deaths);\n          const data = [];\n          for (let i = 0; i <= dataProps.length; i += 1) {\n            // debugger;\n            const dateProp = dataProps[i];\n            let value = element.deaths[dateProp];\n            let prevValue = 0;\n            if (this.inputs.showNew && i > 0) {\n              const prevDateProp = dataProps[i - 1];\n              prevValue = element.deaths[prevDateProp];\n            }\n\n            const addData = this.isDataAboveThreshold(population, i, value);\n\n            // console.log(\n            //   'this.inputs.firstDayMode',\n            //   this.inputs.firstDayMode,\n            //   firstDayModes.deathsPerMillion,\n            // );\n\n            // console.log('this.inputs.firstDayMode', this.inputs.firstDayMode, addData);\n\n            if (this.inputs.showNew) {\n              value -= prevValue;\n            }\n\n            if (addData) {\n              // if we are showing percent of population\n              // console.log(element.country, this.inputs.scaleToCountryPopulation, scaleMultiplier);\n              if (this.inputs.scaleToCountryPopulation === '1') {\n                // console.log(element.country, value, scaleMultiplier, value / population);\n                const deathsPerMillion = this.getDeathsPerMillion(value, population);\n                data.push(Math.round(deathsPerMillion * 10.0) / 10);\n              } else {\n                data.push(Math.round(value * scaleMultiplier * 10.0) / 10);\n              }\n            }\n          }\n\n          series.push({\n            name: element.country,\n            data,\n          });\n        });\n        this.series = series;\n      }, 250);\n      // return [\n      //   {\n      //     name: 'Test',\n      //     data: [10, 41, 35, 51, 49, 62, 69, 91, 148],\n      //   },\n      //   {\n      //     name: 'Test2',\n      //     data: [41, 35, 51, 49, 62, 69, 91, 148],\n      //   },\n      // ];\n    },\n    getDeathsPerMillion(deaths, population) {\n      return (deaths / population) * 1000000.0;\n    },\n    initValues() {\n      this.lastDateName = dateService.getLastDate();\n    },\n    initInputs() {\n      const params = new URLSearchParams(window.location.search);\n      if (params.has('mode')) {\n        if (params.get('mode') === firstDayModes.deaths) {\n          this.inputs.firstDayMode = firstDayModes.deaths;\n        } else if (params.get('mode') === firstDayModes.chronological) {\n          this.inputs.firstDayMode = firstDayModes.chronological;\n        } else {\n          this.inputs.firstDayMode = firstDayModes.deathsPerMillion;\n        }\n      }\n\n      if (params.has('show')) {\n        if (params.get('show') === 'new') {\n          this.inputs.showNew = true;\n        }\n      }\n\n      if (params.has('startAfter') && parseInt(params.get('startAfter'), 10) >= 0) {\n        if (this.inputs.firstDayMode === firstDayModes.deaths) {\n          this.inputs.firstDayDeathsOver = parseInt(params.get('startAfter'), 10);\n        } else {\n          this.inputs.firstDayDeathsPerMillionOver = parseInt(params.get('startAfter'), 10);\n        }\n      }\n      if (params.has('deaths') && parseInt(params.get('deaths'), 10) >= 0) {\n        this.inputs.minDeaths = parseInt(params.get('deaths'), 10);\n      }\n      if (params.has('scale')) {\n        if (parseInt(params.get('deaths'), 10) >= 0) {\n          this.inputs.scaleToCountryPopulation = params.get('scale');\n        }\n      }\n    },\n  },\n  computed: {\n    dateKeys() {\n      return this.getDates(this.historical[0].deaths);\n    },\n    topDeaths() {\n      return this.getTopDeaths().sort((a, b) => b.country - a.country);\n    },\n  },\n  created() {\n    // attempting to get access to something in the tooltip\n    globalData = this.$data;\n    console.log(globalData);\n    this.initValues();\n    this.initInputs();\n    this.getHistoricalData().then(() => {\n      this.historical = this.cleanUpData(this.raw.historical);\n\n      this.updateSeries();\n    });\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\nh3 {\n  margin: 40px 0 0;\n}\n\n.inputs-container {\n  display: flex;\n  flex-direction: row;\n  align-content: space-between;\n\n  .inputs {\n    flex-grow: 1;\n    align-items: flex-start;\n    display: flex;\n    flex-direction: column;\n\n    &.group-1 {\n    }\n    &.group-2 {\n      align-items: flex-end;\n    }\n\n    .input-container {\n      margin-bottom: 4px;\n      label {\n        font-weight: bold;\n        font-size: 0.9em;\n        padding-right: 5px;\n      }\n      select {\n        min-height: 26px;\n      }\n\n      input,\n      select {\n        background: beige;\n        padding: 3px 4px;\n        font-size: 1em;\n      }\n    }\n  }\n}\n\n#chart {\n  border: solid 1px #999;\n  // height: 90vh;\n}\n.small-number {\n  width: 60px;\n  text-align: right;\n  margin-left: 4px;\n}\n\n@media screen and (max-width: 1050px) {\n  .inputs-container {\n    flex-direction: column;\n\n    .inputs.group-2 {\n      align-items: flex-start;\n    }\n  }\n}\n\n@media screen and (max-width: 520px) {\n  .hide-on-small {\n    display: none;\n  }\n  .inputs-container {\n    .input-container {\n      margin-bottom: 4px;\n      label {\n        font-weight: normal;\n        font-size: 0.6em;\n        padding-right: 1px;\n      }\n      select {\n        height: 21px;\n      }\n\n      input,\n      select {\n        background: beige;\n        padding: 1px 1px;\n        font-size: 0.8em;\n      }\n    }\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Chart.vue?vue&type=template&id=6da4bdac&scoped=true&\"\nimport script from \"./Chart.vue?vue&type=script&lang=js&\"\nexport * from \"./Chart.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Chart.vue?vue&type=style&index=0&id=6da4bdac&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6da4bdac\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('ul',[_c('li',[_c('strong',[_vm._v(\"Why did I build this?\")]),_c('ul',[_c('li',[_vm._v(\" As a business owner, I am very interested in predicting when we can SAFELY get back to work. This was built to help predict where we are at in the pandemic (beginning, middle or end). \")]),_c('li',[_vm._v(\" This chart uses death data because I feel it is more accurate. Case data is too inconsistent across countries/states. Testing is all over the place. So even though death data can be anywhere from 14-21 days LAGGING. If we start seeing the rate slow down in deaths, we can be sure we are on the downtrend of cases. However, even though this is way more accurate, there are many reports that even the deaths are under reported. Some are dying and not getting tested, some are dying and not even making it to the hospital. Reports in Italy say it could be under reported by even double in some villages. \")]),_c('li',[_vm._v(\"Many of the charts out there do not take into account population (they just show death or case counts).\")]),_c('li',[_vm._v(\" Many of the charts out there start graphing the data after the first 100 deaths. But again, this DOES NOT take into account population so gives a false timeline comparison IMO. USA's first 100 deaths is nothing compared to Luxembourg's first 100 deaths. So instead, this chart looks at when they hit 3 deaths per million. It puts everyone at the same scale IMO. \")])])]),_c('li',[_c('strong',[_vm._v(\"Some examples on how to use this chart:\")]),_c('ul',[_c('li',[_vm._v(\" TYPICAL: This is the type of chart is out there: \"),_c('br'),_c('a',{attrs:{\"href\":\"?mode=deaths&startAfter=100&scale=0&deaths=1000\"}},[_vm._v(\"[timeline starts after deaths >= 100 w/ no population scale]\")])]),_c('li',[_vm._v(\" TYPICAL: Another chart you commonly see: \"),_c('br'),_c('a',{attrs:{\"href\":\"?mode=chronological&scale=0&deaths=1000\"}},[_vm._v(\"[timeline in chronological order w/ no population scale]\")])]),_c('li',[_vm._v(\" NEW: This chart scales by population: \"),_c('br'),_c('a',{attrs:{\"href\":\"?mode=deathsPerMillion&startAfter=3&scale=1&deaths=1000\"}},[_vm._v(\" [scale to population (deaths per million), timelines starts after deaths per million >= 3 and current deaths are >= 1000] \")])]),_c('li',[_vm._v(\" NEW: So does this one, but with a few more countries \"),_c('br'),_c('a',{attrs:{\"href\":\"?mode=deathsPerMillion&startAfter=3&scale=1&deaths=100\"}},[_vm._v(\" [scale to population (deaths per million), timelines starts after deaths per million >= 3 and current deaths are >= 100] \")])]),_c('li',[_vm._v(\" I also wanted to be able to say \\\"If it were to spread here (in the USA), at the same rate in does in say Italy or Spain or UK, ... What would the death toll potentially look like?\\\" also \\\"If we were the same as another country, are we 'just getting started' or are we 'past the peak', ...?\\\". \"),_c('br'),_vm._v(\"You can do this by \"),_c('strong',[_vm._v(\"selecting USA in the drop down\")]),_vm._v(\", then put your mouse over Italy or other countries to \\\"see where we are heading\\\" \")])])]),_c('li',[_c('strong',[_vm._v(\"Observations:\")]),_c('ul',[_c('li',[_vm._v(\" As of 4/3/20, the USA seems to be following the path of Italy, UK and Netherlands. I hope we stay away from the path of France, Spain and Belgium. \")]),_c('li',[_vm._v(\" As of 4/3/20, Assuming we are following the path of Italy, which the data says we are... Sadly, we are just getting started in the USA. Total deaths today are roughly 7,000. In 20 days from now (4/23), we could be around 80,000+ deaths. STAY INSIDE PEOPLE. \")]),_c('li',[_vm._v(\" China and Iran's numbers seem to be under-reported. When looking at the chart, they are not following the curves of rest of the world. I have read reports that come to the same conclusion. \")])])]),_c('li',[_c('strong',[_vm._v(\"Data Sources:\")]),_c('ul',[_c('li',[_vm._v(\" Source of data for this chart is updated daily (end of day totals only) from here: \"),_c('br'),_c('a',{attrs:{\"href\":\"https://corona.lmao.ninja/docs/?urls.primaryName=version%202.0.0#/JHUCSSE/get_v2_historical\",\"target\":\"_blank\"}},[_vm._v(\"https://corona.lmao.ninja/docs/?urls.primaryName=version%202.0.0#/JHUCSSE/get_v2_historical\")])]),_c('li',[_vm._v(\" Our World in Data has some good deaths per million charts and graphs: \"),_c('br'),_c('a',{attrs:{\"href\":\"https://ourworldindata.org/coronavirus\",\"target\":\"_blank\"}},[_vm._v(\"https://ourworldindata.org/coronavirus\")])]),_c('li',[_vm._v(\" All of the John Hopkins charts/dashboards are nice... Note: This is the original source data for the chart above: \"),_c('br'),_c('a',{attrs:{\"href\":\"https://coronavirus.jhu.edu/us-map\",\"target\":\"_blank\"}},[_vm._v(\"https://coronavirus.jhu.edu/us-map\")])]),_c('li',[_vm._v(\" Worldometers: This is a great source of data (though it will not match this chart 100%, 2 different data sources) \"),_c('br'),_c('a',{attrs:{\"href\":\"https://www.worldometers.info/coronavirus/\",\"target\":\"_blank\"}},[_vm._v(\"https://www.worldometers.info/coronavirus/\")])]),_c('li',[_vm._v(\" NY Times, Doubling Rate Charts. This one is too. When Doubling Rates slow down, we are getting in better shape \"),_c('br'),_c('a',{attrs:{\"href\":\"https://www.nytimes.com/interactive/2020/03/21/upshot/coronavirus-deaths-by-country.html\",\"target\":\"_blank\"}},[_vm._v(\"https://www.nytimes.com/interactive/2020/03/21/upshot/coronavirus-deaths-by-country.html\")])])])]),_c('li',[_c('strong',[_vm._v(\"TO-DOs:\")]),_c('ul',[_c('li',[_vm._v(\" If not Chronological, when a user mouseovers a data point, the tooltip will show the date that the data point is for (rather than just days after) \")]),_c('li',{staticClass:\"done\"},[_vm._v(\"Allow user to toggle between \\\"new daily deaths\\\" (new feature) or \\\"cumulative deaths\\\" (current view)\")]),_c('li',[_vm._v(\"Make it responsive/mobile-friendly\")]),_c('li',[_vm._v(\" Make it way prettier :) I threw this together in like 4-5 hours. It's accurate, but it's ugly, don't view the source code :) \")])])])])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./ExplainerText.vue?vue&type=template&id=1b6014f6&scoped=true&\"\nvar script = {}\nimport style0 from \"./ExplainerText.vue?vue&type=style&index=0&id=1b6014f6&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1b6014f6\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <Chart />\n    <ExplainerText />\n  </div>\n</template>\n\n<script>\nimport Chart from './components/Chart.vue';\nimport ExplainerText from './components/ExplainerText.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Chart,\n    ExplainerText,\n  },\n};\n</script>\n\n<style lang=\"scss\">\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\na {\n  color: #008ffb;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1e9257a0&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue';\nimport VueApexCharts from 'vue-apexcharts';\nimport App from './App.vue';\n\nVue.use(VueApexCharts);\n\nVue.component('apexchart', VueApexCharts);\n\nVue.config.productionTip = false;\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount('#app');\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExplainerText.vue?vue&type=style&index=0&id=1b6014f6&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExplainerText.vue?vue&type=style&index=0&id=1b6014f6&scoped=true&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=style&index=0&id=6da4bdac&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=style&index=0&id=6da4bdac&scoped=true&lang=scss&\""],"sourceRoot":""}