(function(a){function t(t){for(var n,r,s=t[0],u=t[1],l=t[2],p=0,h=[];p<s.length;p++)r=s[p],Object.prototype.hasOwnProperty.call(i,r)&&i[r]&&h.push(i[r][0]),i[r]=0;for(n in u)Object.prototype.hasOwnProperty.call(u,n)&&(a[n]=u[n]);c&&c(t);while(h.length)h.shift()();return o.push.apply(o,l||[]),e()}function e(){for(var a,t=0;t<o.length;t++){for(var e=o[t],n=!0,s=1;s<e.length;s++){var u=e[s];0!==i[u]&&(n=!1)}n&&(o.splice(t--,1),a=r(r.s=e[0]))}return a}var n={},i={app:0},o=[];function r(t){if(n[t])return n[t].exports;var e=n[t]={i:t,l:!1,exports:{}};return a[t].call(e.exports,e,e.exports,r),e.l=!0,e.exports}r.m=a,r.c=n,r.d=function(a,t,e){r.o(a,t)||Object.defineProperty(a,t,{enumerable:!0,get:e})},r.r=function(a){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},r.t=function(a,t){if(1&t&&(a=r(a)),8&t)return a;if(4&t&&"object"===typeof a&&a&&a.__esModule)return a;var e=Object.create(null);if(r.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:a}),2&t&&"string"!=typeof a)for(var n in a)r.d(e,n,function(t){return a[t]}.bind(null,n));return e},r.n=function(a){var t=a&&a.__esModule?function(){return a["default"]}:function(){return a};return r.d(t,"a",t),t},r.o=function(a,t){return Object.prototype.hasOwnProperty.call(a,t)},r.p="";var s=window["webpackJsonp"]=window["webpackJsonp"]||[],u=s.push.bind(s);s.push=t,s=s.slice();for(var l=0;l<s.length;l++)t(s[l]);var c=u;o.push([0,"chunk-vendors"]),e()})({0:function(a,t,e){a.exports=e("56d7")},"21b0":function(a,t,e){},"262e":function(a,t,e){"use strict";var n=e("21b0"),i=e.n(n);i.a},"56d7":function(a,t,e){"use strict";e.r(t);e("e260"),e("e6cf"),e("cca6"),e("a79d");var n=e("2b0e"),i=e("1321"),o=e.n(i),r=function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{attrs:{id:"app"}},[e("HelloWorld",{attrs:{msg:"Welcome to Your Vue.js App"}})],1)},s=[],u=function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"hello"},[a._v(" countries: "+a._s(a.topDeaths.length)+" / "+a._s(a.historical.length)+" (with deaths >= "),e("input",{directives:[{name:"model",rawName:"v-model",value:a.inputs.minDeaths,expression:"inputs.minDeaths"}],staticClass:"min-death",attrs:{type:"number",min:"20"},domProps:{value:a.inputs.minDeaths},on:{input:function(t){t.target.composing||a.$set(a.inputs,"minDeaths",t.target.value)}}}),a._v(" ) "),e("span",{attrs:{title:a.tooltips.scalePopulation}},[a._v(" Scale to Poulation: "),e("select",{directives:[{name:"model",rawName:"v-model",value:a.inputs.scaleToCountryPopulation,expression:"inputs.scaleToCountryPopulation"}],on:{change:function(t){var e=Array.prototype.filter.call(t.target.options,(function(a){return a.selected})).map((function(a){var t="_value"in a?a._value:a.value;return t}));a.$set(a.inputs,"scaleToCountryPopulation",t.target.multiple?e:e[0])}}},[e("option",{attrs:{value:"0"}},[a._v("Do not scale by population")]),e("option",{attrs:{value:"1"}},[a._v("Scale by Deaths per Million (population)")]),a._l(a.topDeaths,(function(t){return e("option",{key:t.country,domProps:{value:{population:a.countries.populations[t.country],name:t.country}}},[a._v(a._s(t.country)+" ("+a._s(a.countries.populations[t.country].toLocaleString())+")")])}))],2)]),e("div",{attrs:{id:"chart"}},[e("apexchart",{attrs:{type:"line",height:"650",options:a.chartOptions,series:a.series}})],1),a._v(" TODO: get the height to fill the screen in a smart way ")])},l=[],c=(e("99af"),e("4de4"),e("4160"),e("d81d"),e("13d5"),e("b0c0"),e("b64b"),e("d3b7"),e("ac1f"),e("3ca3"),e("841c"),e("159b"),e("ddb0"),e("2b3d"),e("96cf"),e("1da1")),p=e("bc3a"),h=e.n(p),d={populations:{China:1439323776,India:1380004385,USA:331002651,Indonesia:273523615,Pakistan:220892340,Brazil:212559417,Nigeria:206139589,Bangladesh:164689383,Russia:145934462,Mexico:128932753,Japan:126476461,Ethiopia:114963588,Philippines:109581078,Egypt:102334404,Vietnam:97338579,"DR Congo":89561403,Turkey:84339067,Iran:83992949,Germany:83783942,Thailand:69799978,UK:67886011,France:65273511,Italy:60461826,"Tanzania, United Republic of":59734218,"South Africa":59308690,Myanmar:54409800,Kenya:53771296,"S. Korea":51269185,Colombia:50882891,Spain:46754778,Uganda:45741007,Argentina:45195774,Algeria:43851044,Sudan:43849260,Ukraine:43733762,Iraq:40222493,Afghanistan:38928346,Poland:37846611,Canada:37742154,Morocco:36910560,"Saudi Arabia":34813871,Uzbekistan:33469203,Peru:32971854,Angola:32866272,Malaysia:32365999,Mozambique:31255435,Ghana:31072940,Yemen:29825964,Nepal:29136808,Venezuela:28435940,Madagascar:27691018,Cameroon:26545863,"Côte d'Ivoire":26378274,"North Korea":25778816,Australia:25499884,Niger:24206644,"Taiwan*":23816775,"Sri Lanka":21413249,"Burkina Faso":20903273,Mali:20250833,Romania:19237691,Malawi:19129952,Chile:19116201,Kazakhstan:18776707,Zambia:18383955,Guatemala:17915568,Ecuador:17643054,"Syrian Arab Republic":17500658,Netherlands:17134872,Senegal:16743927,Cambodia:16718965,Chad:16425864,Somalia:15893222,Zimbabwe:14862924,Guinea:13132795,Rwanda:12952218,Benin:12123200,Burundi:11890784,Tunisia:11818619,Bolivia:11673021,Belgium:11589623,Haiti:11402528,Cuba:11326616,"South Sudan":11193725,"Dominican Republic":10847910,Czechia:10708981,Greece:10423054,Jordan:10203134,Portugal:10196709,Azerbaijan:10139177,Sweden:10099265,Honduras:9904607,UAE:9890402,Hungary:9660351,Tajikistan:9537645,Belarus:9449323,Austria:9006398,"Papua New Guinea":8947024,Serbia:8737371,Israel:8655535,Switzerland:8654622,Togo:8278724,"Sierra Leone":7976983,"Hong Kong":7496981,Laos:7275560,Paraguay:7132538,Bulgaria:6948445,Libya:6871292,Lebanon:6825445,Nicaragua:6624554,Kyrgyzstan:6524195,"El Salvador":6486205,Turkmenistan:6031200,Singapore:5850342,Denmark:5792202,Finland:5540720,"Congo (Kinshasa)":5518087,Slovakia:5459642,Norway:5421241,Oman:5106626,"State of Palestine":5101414,"Costa Rica":5094118,Liberia:5057681,Ireland:4937786,"Central African Republic":4829767,"New Zealand":4822233,Mauritania:4649658,Panama:4314767,Kuwait:4270571,Croatia:4105267,"Moldova, Republic of":4033963,Georgia:3989167,Eritrea:3546421,Uruguay:3473730,"Bosnia and Herzegovina":3280819,Mongolia:3278290,Armenia:2963243,Jamaica:2961167,Qatar:2881053,Albania:2877797,"Puerto Rico":2860853,Lithuania:2722289,Namibia:2540905,Gambia:2416668,Botswana:2351627,Gabon:2225734,Lesotho:2142249,Macedonia:2083374,Slovenia:2078938,GuineaBissau:1968001,Latvia:1886198,Bahrain:1701575,"Equatorial Guinea":1402985,"Trinidad and Tobago":1399488,Estonia:1326535,TimorLeste:1318445,Mauritius:1271768,Cyprus:1207359,Eswatini:1160164,Djibouti:988e3,Fiji:896445,"Réunion":895312,Comoros:869601,Guyana:786552,Bhutan:771608,"Solomon Islands":686884,Macao:649335,Montenegro:628066,Luxembourg:625978,"Western Sahara":597339,Suriname:586632,"Cabo Verde":555987,Maldives:540544,Malta:441543,Brunei:437479,Guadeloupe:400124,Belize:397628,Bahamas:393244,Martinique:375265,Iceland:341243,Vanuatu:307145,"French Guiana":298682,Barbados:287375,"New Caledonia":285498,"French Polynesia":280908,Mayotte:272815,"Sao Tome & Principe":219159,Samoa:198414,"Saint Lucia":183627,"Channel Islands":173863,Guam:168775,"Curaçao":164093,Kiribati:119449,Micronesia:115023,Grenada:112523,"St. Vincent & Grenadines":110940,Aruba:106766,Tonga:105695,"U.S. Virgin Islands":104425,Seychelles:98347,"Antigua and Barbuda":97929,"Isle of Man":85033,Andorra:77265,Dominica:71986,"Cayman Islands":65722,Bermuda:62278,"Marshall Islands":59190,"Northern Mariana Islands":57559,Greenland:56770,"American Samoa":55191,"Saint Kitts & Nevis":53199,"Faeroe Islands":48863,"Sint Maarten":42876,"Turks and Caicos":38717,"Saint Martin":38666,Liechtenstein:38128,"San Marino":33931,"British Virgin Islands":30231,"Caribbean Netherlands":26223,"Cook Islands":17564,Tuvalu:11792,Bosnia:3280819,Monaco:39242,"Diamond Princess":3711,"MS Zaandam":1829,"West Bank and Gaza":5101414,Kosovo:1810463,Burma:54409800}},f="https://corona.lmao.ninja/v2/historical",m={name:"HelloWorld",data:function(){return{historical:[],lastDateName:"4/1/20",refreshDataEveryMiliseconds:72e5,inputs:{minDeaths:1e3,scaleToCountryPopulation:"0",firstDayDeathsOver:100},tooltips:{scalePopulation:"ex: Set it to USA. Then you can look at Italy or Spain and see what the death toll would be if the same % of population that died in Italy, were to die in the USA. So, if you think we are going to follow in Italy's footsteps, you can set it to USA, and look at Italy's numbers."},raw:{historical:null},countries:{populations:d.populations},series:[],chartOptions:{customData:{test:100},chart:{type:"line",zoom:{enabled:!0}},dataLabels:{enabled:!1},stroke:{curve:"straight"},title:{text:"Total Deaths after X Deaths"},grid:{row:{colors:["#f3f3f3","transparent"],opacity:.5}},tooltip:{x:{formatter:function(a,t){return"".concat(a," days after ").concat(t.w.config.customData.test," deaths")}},y:{formatter:function(a){return"".concat(a.toLocaleString())}}}}}},props:{msg:String},watch:{inputs:{deep:!0,handler:function(){this.updateSeries()}}},methods:{dataIsExpired:function(){if(!localStorage.historicalExpired)return!0;var a=Date.parse(localStorage.historicalExpired),t=Date.parse(new Date);return t-a>this.refreshDataEveryMiliseconds},getHistoricalData:function(){var a=this;return Object(c["a"])(regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){while(1)switch(t.prev=t.next){case 0:if(!localStorage.historical||a.dataIsExpired()){t.next=4;break}a.raw.historical=JSON.parse(localStorage.historical),t.next=6;break;case 4:return t.next=6,h.a.get(f).then((function(t){a.raw.historical=t.data,localStorage.historical=JSON.stringify(t.data),localStorage.historicalExpired=new Date}));case 6:case"end":return t.stop()}}),t)})))()},cleanUpData:function(a){for(var t=[],e=[],n=0;n<a.length;n+=1)t[a[n].country]||(t[a[n].country]=!0,e.push({country:a[n].country,deaths:this.getDeathsByCountry(a,a[n].country)}));return e},getDeathsByCountry:function(a,t){var e=a.filter((function(a){return a.country===t}));if(1===e.length)return e[0].timeline.deaths;for(var n=e.map((function(a){return a.timeline.deaths})),i={},o=Object.keys(n[0]),r=function(a){var t=o[a];t&&(i[t]=n.map((function(a){return a[t]})).reduce((function(a,t){return a+t})))},s=0;s<=o.length;s+=1)r(s);return i},getTopDeaths:function(){var a=this;return this.historical.filter((function(t){return t.deaths[a.lastDateName]>=a.inputs.minDeaths})).sort((function(a,t){return t.country-a.country}))},updateLabels:function(){var a="Total Deaths (after having ".concat(this.inputs.firstDayDeathsOver," total deaths in the country)");if("0"!==this.inputs.scaleToCountryPopulation)if("1"===this.inputs.scaleToCountryPopulation)a="Deaths per Million (relative to population of the country, after having ".concat(this.inputs.firstDayDeathsOver," total deaths in the country.)");else{var t=this.inputs.scaleToCountryPopulation.name;a="Deaths per country as if the country was the size of ".concat(t," ")+"(this simulates if the spread was the same in each country, but had the population of ".concat(t,". ")+"This might tell you what the ".concat(t," could be facing.)")}this.chartOptions={title:{text:a}}},updateSeries:function(){var a=this;clearTimeout(window.timersUpdate),window.timersUpdate=setTimeout((function(){a.updateLabels();var t=a.getTopDeaths(),e=[];t.forEach((function(t){var n=1;"0"!==a.inputs.scaleToCountryPopulation&&("1"===a.inputs.scaleToCountryPopulation?(n=a.countries.populations[t.country],a.countries.populations[t.country]):n=a.inputs.scaleToCountryPopulation.population/a.countries.populations[t.country]);for(var i=Object.keys(t.deaths),o=[],r=0;r<=i.length;r+=1){var s=i[r],u=t.deaths[s];u>=a.inputs.firstDayDeathsOver&&("1"===a.inputs.scaleToCountryPopulation?o.push(Math.round(u/n*1e6)):o.push(Math.round(u*n)))}e.push({name:t.country,data:o,color:"red"})})),a.series=e}),100)},initValues:function(){this.lastDateName=this.getLastDate()},initInputs:function(){var a=new URLSearchParams(window.location.search);a.has("deaths")&&parseInt(a.get("deaths"),10)&&(this.inputs.minDeaths=parseInt(a.get("deaths"),10)),a.has("scale")&&(this.inputs.scaleToCountryPopulation=a.get("scale"))},getLastDate:function(){var a=new Date,t=new Date;t.setDate(a.getDate()-1);var e=t.getDate(),n=t.getMonth()+1,i=String(t.getFullYear()).substr(-2);return"".concat(n,"/").concat(e,"/").concat(i)}},computed:{topDeaths:function(){return this.getTopDeaths()}},created:function(){var a=this;this.initValues(),this.initInputs(),this.getHistoricalData().then((function(){a.historical=a.cleanUpData(a.raw.historical),a.updateSeries()}))}},y=m,g=(e("262e"),e("2877")),v=Object(g["a"])(y,u,l,!1,null,"dfd17caa",null),b=v.exports,S={name:"App",components:{HelloWorld:b}},D=S,w=(e("5c0b"),Object(g["a"])(D,r,s,!1,null,null,null)),C=w.exports;n["a"].use(o.a),n["a"].component("apexchart",o.a),n["a"].config.productionTip=!1,new n["a"]({render:function(a){return a(C)}}).$mount("#app")},"5c0b":function(a,t,e){"use strict";var n=e("9c0c"),i=e.n(n);i.a},"9c0c":function(a,t,e){}});
//# sourceMappingURL=app.75ffd6fd.js.map